====== PHP RFC: Improve callbacks in ext/dom and ext/xsl ======
  * Version: 0.1
  * Date: 2023-11-05
  * Author: Niels Dossche, nielsdos@php.net
  * Status: Draft
  * First Published at: https://wiki.php.net/rfc/improve_callbacks_dom_and_xsl

===== Introduction =====

The <php>DOMXPath</php> class allows the user to run XPath expression queries on a HTML/XML document.
The <php>XSLTProcessor</php> class allows the user to perform XSL transformations on HTML/XML documents. It also uses XPath expressions under the hood.
Both of these classes support support calling PHP functions inside XPath expressions. However, there is an unfortunate limitation in that only callable strings are supported. This means that closures, first-class callables, and instance methods cannot be used. This proposal aims to improve the callback support such that any callable can be used.

To better understand the proposal, I'll first give some background to demo the usage. Then I'll introduce the proposal itself.

===== Background =====

===== Proposal =====

==== Exceptions vs warnings ====

Prior to PHP 8.0, the <php>DOMXPath</php> class threw warnings in the following error conditions:
  - The handler name is not a string
  - The function callback could not be called because it isn't callable
  - The function callback wasn't registered

In PHP 8.0, these were changed to throw exceptions instead of warnings (https://github.com/php/php-src/pull/5418).
<php>XSLTProcessor</php> has the same error conditions, but still uses warnings to this day.
As part of this proposal, the duplicated code will be unified in a common place, and will therefore use exceptions instead of warnings.

==== Method signature ====

The method signature of <php>registerPhpFunctions</php> will remain the same.
You might be wondering why I don't change [TODO]

===== Backward Incompatible Changes =====

Strictly speaking, as the callable validity is checked earlier (i.e. when calling <php>registerPhpFunctions()</php>), this has a subtle break. If the function is not declared yet at the time of calling <php>registerPhpFunctions()</php>, then this will throw an error. Previously this was accepted as long as the function was declared by the time the callback was executed. I think however that this situation is sufficiently rare and easily avoidable.

===== Proposed PHP Version(s) =====

Next PHP 8.x, that is 8.4 at the time of writing.

===== RFC Impact =====

==== To Existing Extensions ====

This affects both the ext/dom and ext/xsl extension.
Implementation-wise, the ext/dom extension will be gain the shared code to deal with xpath callables because the result set handling already depends on DOM classes. Furthermore, ext/xsl already depends on ext/dom anyway.

===== Open Issues =====

None.

===== Unaffected PHP Functionality =====

Everything else. Why does this section exist?

===== Future Scope =====

None right now.

===== Proposed Voting Choices =====

One primary vote requiring 2/3rd majority: "Accept the proposed changes to ext/dom and ext/xsl callbacks?"

===== Patches and Tests =====

TODO

===== Implementation =====
After the project is implemented, this section should contain 
  - the version(s) it was merged into
  - a link to the git commit(s)
  - a link to the PHP manual entry for the feature
  - a link to the language specification section (if any)

===== References =====

Pre-RFC pitch: https://externals.io/message/121286

===== Rejected Features =====
Keep this updated with features that were discussed on the mail lists.