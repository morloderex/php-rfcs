====== PHP RFC: Your Title Here ======
  * Version: 0.9
  * Date: 2022-06-27
  * Author: Levi Morrison, levim@php.net
  * Status: Draft
  * First Published at: http://wiki.php.net/rfc/interface-default-methods


===== Introduction =====
Over time, authors sometimes will want to add methods to an interface. Today, this causes breakages. This RFC proposes one way to reduce the scope of breakage.

===== Proposal =====

Interface methods can now provide an implementation.

<PHP>
interface Example
{
  // Today, you cannot specify an implementation, only a
  // signature.
  function method1(): void;

  // With this RFC, you can provide an implementation:
  function method2(): void {
    echo __METHOD__, "\n";
  } 
}
</PHP>

Interfaces can extend multiple interfaces and classes can implement multiple interfaces, so it's possible that there are multiple default methods to choose from. TODO: outline and implement the resolution algorithm.

===== Backward Incompatible Changes =====
None.

===== Proposed PHP Version(s) =====
PHP 8.NEXT.

===== RFC Impact =====

==== To Existing Extensions ====
Modules can specify an interface implementation as well.

==== To Opcache ====
Opcache should also work with this feature.

===== Open Issues =====
Make sure there are no open issues when the vote starts!

===== Unaffected PHP Functionality =====
List existing areas/features of PHP that will not be changed by the RFC.

This helps avoid any ambiguity, shows that you have thought deeply about the RFC's impact, and helps reduces mail list noise.

===== Future Scope =====
This section details areas where the feature might be improved in future, but that are not currently proposed in this RFC.

===== Proposed Voting Choices =====
Include these so readers know where you are heading and can discuss the proposed voting options.

===== Patches and Tests =====
Links to any external patches and tests go here.

If there is no patch, make it clear who will create a patch, or whether a volunteer to help with implementation is needed.

Make it clear if the patch is intended to be the final patch, or is just a prototype.

For changes affecting the core language, you should also provide a patch for the language specification.

===== Implementation =====
After the project is implemented, this section should contain 
  - the version(s) it was merged into
  - a link to the git commit(s)
  - a link to the PHP manual entry for the feature
  - a link to the language specification section (if any)

===== References =====
Links to external references, discussions or RFCs

===== Rejected Features =====
Keep this updated with features that were discussed on the mail lists.