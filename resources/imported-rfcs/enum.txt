====== PHP RFC: Enum ======

  * Version: 2.0 (The old version by pierrick and melon can be found here: https://wiki.php.net/rfc/enum?rev=1365505707)
  * Date: 2010-05-21
  * Author: Levi Morrison <levim@php.net>
  * Status: In Draft
  * First Published at: http://wiki.php.net/rfc/enum

===== Introduction =====

Enums are helpful when defining a finite set of strongly typed, mutually exclusive values.

===== Proposal =====

Enums are given a name and a finite set of unique, case-sensitive values. Enums share the the same symbol table as classes and interfaces. Enums are implicitly final; you cannot extend an enum. Names that are invalid for classes are also invalid for enums.

Here is a basic example of an enum type ''RenewalAction'' with two values:
<PHP>
enum RenewalAction {
    Deny,
    Approve
}
</PHP>

To refer to an enum value you must also include the enum name (''RenewalAction::Deny'').

Enums are strongly typed and can be used as parameter or return types. They can also be used in case statements.
<PHP>
function other(RenewalAction $action): RenewalAction {
    switch ($action) {
        case RenewalAction::Approve:
            return RenewalAction::Deny;
            
        case RenewalAction::Deny:
            return RenewalAction::Approve;
    }
}
f(RenewalAction::Approve);
</PHP>

Each enum value knows its ordinal, or in other words each enum value knows its position that it was defined in. This can be retrieved with the ''ordinal()'' method:
<PHP>
var_dump(RenewalAction::Approve->ordinal()); // int(1)
var_dump(RenewalAction::Deny->ordinal()); // int(0)
</PHP>

An array of all values in the enum can be retrieved with the ''values()'' method. The order in which they are returned is the same as the order in which they are defined.
<PHP>
foreach (RenewalAction::values() as $name => $value) {
    printf("%s: %d\n", $name, $value->ordinal());
}
/* Result:
Deny: 0
Approve: 1
 */
</PHP>

===== Proposed Voting Choices =====

The vote will be a simple "yes" or "no". This RFC requires 2/3 of the votes to be "yes" to pass. This RFC targets PHP version 7.1 .

===== Patches and Tests =====

A proof of concept implementation can be found on this branch: https://github.com/morrisonlevi/php-src/tree/enum
