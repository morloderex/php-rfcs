====== PHP RFC: Readonly classes ======
  * Date: 2021-08-04
  * Author: Máté Kocsis <kocsismate@php.net>
  * Status: Draft
  * Target Version: PHP 8.2
  * Implementation: https://github.com/php/php-src/pull/7305

===== Introduction =====

PHP 8.1 added support for readonly properties via [[rfc:readonly_properties_v2|PHP RFC: Readonly properties 2.0]]. However, it's still not easy to declare (quasi-)immutable classes, especially if they contain many properties. Therefore, this RFC proposes to add support for ''readonly'' classes.

===== Proposal =====

The usage of the ''readonly'' modifier added by [[rfc:readonly_properties_v2|PHP RFC: Readonly properties 2.0]] is extended to classes:

<PHP>
readonly class Test {
    public string $prop;
}
</PHP>

Doing so will implicitly mark all instance properties of a class as readonly. Furthermore, it will prevent the usage of dynamic properties.

<PHP>
readonly class Foo
{
    public int $bar;

    public function __construct() {
        $this->bar = 1;
    }
}

$foo = new Foo();
$foo->bar = 2;
// Cannot modify readonly property Foo::$bar

$foo->baz = 1;
// Cannot create dynamic property Foo::$baz

</PHP>

==== Restrictions ====

As neither untyped, nor static properties are covered by the [[rfc:readonly_properties_v2#restrictions|Readonly properties RFC]],
readonly classes cannot declare them either:

<PHP>
readonly class Foo
{
    public $bar;
}

// Fatal error: Readonly property Foo::$bar must have type
</PHP>

<PHP>
readonly class Foo
{
    public static int $bar;
}

// Fatal error: Readonly class Foo cannot declare static properties


==== Inheritance ====

Similarly how overriding of readonly properties work, only a readonly class can extend a readonly parent:

<PHP>
class A {}
readonly class B extends A {}
</PHP>

Both of the following are illegal:

<PHP>
readonly class A {}
class B extends A {}
</PHP>

<PHP>
class A {}
readonly class B extends A {}
</PHP>

==== Reflection ====

A ''ReflectionClass::isReadOnly()'' method is added, which reports whether a class is declared as read-only. Additionally, ''ReflectionClass::getModifiers()'' will also include the ''ReflectionClass::IS_READONLY'' flag.

===== Backward Incompatible Changes =====

None.

===== Vote =====

Add readonly classes as proposed?
