====== PHP RFC: Your Title Here ======
  * Version: 1.0
  * Date: 2024-06-20
  * Author: Paul Morris, bilge@scriptfusion.com
  * Status: Under Discussion
  * First Published at: https://wiki.php.net/rfc/static_class

===== Introduction =====

A static class is a class whose members (properties and methods) are all static, so marked with the existing ''static'' keyword, adjacent to the class declaration.

<code php>
static class Foo {}
</code>

An implicit static class can be created today, simply by only including static members, but explicitly marking a class as static has several advantages:

  * A clearer expression of developer intent.
  * Language-level compile-time checks to verify no instance members are included anywhere in the inheritance chain.
  * Language-level runtime checks to verify the object is never instantiated (using ''new'').


===== Proposal =====


===== Backward Incompatible Changes =====
What breaks, and what is the justification for it?

===== Proposed PHP Version(s) =====
PHP 8.4

===== RFC Impact =====
==== To SAPIs ====
Describe the impact to CLI, Development web server, embedded PHP etc.

==== To Existing Extensions ====
Will existing extensions be affected?

==== To Opcache ====
It is necessary to develop RFC's with opcache in mind, since opcache is a core extension distributed with PHP.

Please explain how you have verified your RFC's compatibility with opcache.

==== New Constants ====
Describe any new constants so they can be accurately and comprehensively explained in the PHP documentation.

==== php.ini Defaults ====
If there are any php.ini settings then list:
  * hardcoded default values
  * php.ini-development values
  * php.ini-production values

===== Open Issues =====
Make sure there are no open issues when the vote starts!

===== Unaffected PHP Functionality =====
List existing areas/features of PHP that will not be changed by the RFC.

This helps avoid any ambiguity, shows that you have thought deeply about the RFC's impact, and helps reduces mail list noise.

===== Future Scope =====
This section details areas where the feature might be improved in future, but that are not currently proposed in this RFC.

===== Proposed Voting Choices =====
Include these so readers know where you are heading and can discuss the proposed voting options.

===== Patches and Tests =====

The patch and tests will be created by myself and/or Lanre. A draft PR by Lanre is currently available at https://github.com/php/php-src/pull/14583.


===== Implementation =====
After the project is implemented, this section should contain 
  - the version(s) it was merged into
  - a link to the git commit(s)
  - a link to the PHP manual entry for the feature
  - a link to the language specification section (if any)

===== References =====
Links to external references, discussions or RFCs

===== Rejected Features =====
Keep this updated with features that were discussed on the mail lists.