
====== PHP RFC: Secure Session Module Options by Default======
  * Version: 0.9
  * Date: 2014-02-10 
  * Author: Yasuo Ohgaki, yohgaki@ohgaki.net
  * Status: Under Discussion
  * First Published at: http://wiki.php.net/rfc/secure-session-options-by-default

===== Introduction =====

HTTP session management is core of Web security. Current default of session module options are weaker than it could be. Secure values by default would be better.

===== Proposal =====

Secure setting should be the default and user should selectively use weaker setting.

**use_strict_mode=on** disallow user supplied session ID and improve session ID security. Most applications work with this option. Add optional $force_id parameter for session_id() to allow any id regardless of this mode.

  bool session_id(string $new_id [, bool $force_id=FALSE]);


**cookie_httponly=on** disallow use of session ID cookie from JavaScript. It reduces risk of stolen session ID via JavaScript injections. Most applications work with this option.

**hash_function=1** SHA-1 has larger bits than MD5. (160 bits vs 128 bits) More difficult to guess. [[http://preshing.com/20110504/hash-collision-probabilities/|Collision is less likely]]. 

NIST [[http://csrc.nist.gov/groups/ST/hash/policy_2006.html|suggests]] not to use SHA-1 for "applications that require collision resistance as soon as practical, and must use the SHA-2 family of hash functions for these applications after 2010."  Files save handler detects session ID collision. Therefore it is out of NIST requirement scope, but collision detection is up to save handlers.


**hash_bits_per_character=5** php.ini-development/production hash_bits_per_character is 5 already. Make compiled default to 5 also.

**Add "_" to allowed chars** When hash_bits_per_character=6, session module uses all of allowed chars for files save handler. Add '_' to allowed chars. It's useful for prefixing session ID by session_create_id().


===== Backward Incompatible Changes =====

use_script_mode=on: Do not accept user provided session ID (This is good for security)

cookie_httponly=on: JavaScript cannot access session ID cookie (This is good for security)

hash_function=1: Longer session ID string. This would not be issue for almost all (Collision is less likely. Good for security)

hash_bits_per_character=5: Shorter session ID string and more chars in Session ID string. It's 5 in php.ini-development/production already. This could not be an issue for almost all apps.

===== Proposed PHP Version(s) =====

PHP 5.6

**Add '_' to allowed chars** is PHP-5.5 and up. (files save handler only. Allowed chars are decided by save handler.)


===== Impact to Existing Extensions =====

Session module

===== php.ini Defaults =====

  * hardcoded default values
  * php.ini-development values
  * php.ini-production values

use_script_mode=on, cookie_httponly=on, hash_function=1, hash_bits_per_character=5 for all
 

===== Open Issues =====


===== Proposed Voting Choices =====

Yes/No

===== VOTE ====

VOTE is not started.
 
<doodle title="Secure Session Module Options by Default" auth="yohgaki" voteType="single" closed="true">
   * Yes
   * No
</doodle>

Thank you for voting!

===== Implementation =====

After the project is implemented, this section should contain 
  - the version(s) it was merged to
  - a link to the git commit(s)
  - a link to the PHP manual entry for the feature

===== References =====

  - https://wiki.php.net/rfc/session-lock-ini
  - Collision probability - http://preshing.com/20110504/hash-collision-probabilities/
  - NIST advises not to use SHA-1 - http://csrc.nist.gov/groups/ST/hash/policy_2006.html

===== Rejected Features =====

Keep this updated with features that were discussed on the mail lists.