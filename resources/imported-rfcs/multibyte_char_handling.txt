
====== PHP RFC: Multibyte Char Hnadling ======
  * Version: 0.2
  * Date: 2014-01-18
  * Author: Yasuo Ohgaki, yohgaki@ohgaki.net 
  * Status: Under Discussion
  * First Published at: http://wiki.php.net/rfc/multibyte_char_handling

===== Introduction =====

For example, addslashes()/stripslashes() has vulnerability that allows PHP script execution and DoS under certain environment via char encoding based attack. Counter measure using php_mblen() is proposed at first in security ML. However, php_mblen() is locale dependent and unreliable. Therefore, this is proposed and created RFC to decide.

Proper and secure char encoding handling is mandatory for application to work correctly. However, current PHP lacks default multibyte char handling feature. As a result, escapeshellarg()/escapeshellcmd()/fgetcsv() rely on locale based multibyte char handling for security and proper operation. Currently, addslahses()/ver_export()/stripslashes() lacks proper multibyte char handling. 

escapeshellarg()/escapeshellcmd()/fgetcsv() uses locale based multibyte char handling. i.e. php_mblem() Although this approach works mostly, it has several disadvantages.

  * Locale is not reliable and has issues on some locale, such as Turkish locale.
  * Locale is not visible for application programmers. Most developers just ignores locale.

New mbstring functions are added for users that are affected by this issue so that they can simply rename functions.


===== Proposal =====

PHP, including released versions, needs secure addslashes()/var_export()/stripslashes(). 

==== Add mb_addslashes()/mb_var_export()/mb_stripslashes() to released versions ====

For PHP 5.3 and up, add mb_add_slashes()/mb_var_export()/mb_strip_slashes() has encoding option.

  string mb_add_slashes(string $str [, string $encoding=internal_encoding])
  string mb_var_export(mixed $var [, bool $return=FALSE [, string $encoding=internal_encoding]])
  string mb_strip_slashes(string $str [, $encoding=internal_encoding])

==== Add mb version of function uses php_mblen() ====

For PHP 5.3 and up, add mb_escape_shell_arg()/mb_secape_shell_cmd()/mb_fget_csv()/etc that have extra encoding parameter like mb_add_slashes().

  * mb_escape_shell_arg
  * mb_escape_shsell_cmd
  * functions/methods use php_fgetcsv API http://lxr.php.net/search?q=php_fgetcsv&project=PHP_5_5

Reference
  * http://lxr.php.net/search?q=php_mblen&defs=&refs=&path=&hist=&project=PHP_5_5

We still needs php_mblen() for command line output since it's not good idea to detect locale and using internal_encoding opens new vulnerability.

Functions that should use locale are

 - mb_escape_shell_arg()
 - mb_escape_shell_cmd()

These function may override locale by encoding parameter.
Since fgetcsv() uses locale now, do the same for fgetcsv().

==== mbstring usage and implementation ====

For PHP 5.3 and up, all changes done in mbstring.

mbstring is rather large module. Therefore, it is better to be able to build PHP without mbstring. Any function uses mbstring feature use "#if", so that PHP could be built without mbstring if there is. Note that this RFC only use mbstring feature in mbstring module.

mbstring functions have history of remain insecure when single byte version of function's issue has been fixed. e.g. mb_prase_str(), mb_send_mail() Refactoring is preffered to avoid this issue, but refactoring is postponed until PHP6. i.e. There would be 2 codes that are mostly the same. 


===== Backward Incompatible Changes =====

None.

===== Proposed PHP Version(s) =====

  * PHP 5.3 and up - Introduce additional mb_*() functions
  * PHP 5.6 and up - Compile mbstring by default as non shared extension.

===== Impact to Existing Extensions =====

  * PHP 5.6 and up - Compiles mbstring by default. 

===== Open Issues =====

Use of mbstring.func_overload INI for overriding single byte string functions by mbstring functions is left open issue for future releases.

Some users are annoyed by sloppy multilingual implementations using
this option. There is feature request from user who want to remove 
mbstring.func_overload INI option.

https://bugs.php.net/bug.php?id=65785

===== Proposed Voting Choices =====

Yas/No

===== Patches and Tests =====

  * Prepared for review after vote.

===== Implementation =====

After the project is implemented, this section should contain 
  - the version(s) it was merged to
  - a link to the git commit(s)
  - a link to the PHP manual entry for the feature

===== References =====

Related RFC
  * https://wiki.php.net/rfc/default_encoding
  * https://wiki.php.net/rfc/altmbstring

CVE
  * CVE is assigned for addslashes issue. CVE-2014-1239

===== Rejected Features =====

Keep this updated with features that were discussed on the mail lists.