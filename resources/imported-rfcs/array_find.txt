====== PHP RFC: array_find ======
  * Version: 0.9
  * Date: 2024-03-31
  * Author: Joshua RÃ¼sweg, josh@php.net
  * Status: Draft
  * First Published at: https://wiki.php.net/rfc/array_find

===== Introduction =====

This RFC proposes a new function <php>array_find</php>, which searches an array with a given function and returns the first result. 


===== Proposal =====

Add a new function <php>array_find</php>:

<PHP>
function array_find(array $array, callable $callback, bool $return_array_key = false): mixed {}
</PHP>

==== Parameters ====

<php>array $array</php>

The array that should be searched.

<php>callable $callback</php>

The callback function to use to search the array. The function is passed two parameters. The first parameter contains the array value. The second parameter contains the array index.

<php>bool $return_array_key</php>

If this parameter is <php>true</php>, the array key is returned instead of the value.

==== Return Value ====

The function returns the first entry for which the <php>$callback</php> returns <php>true</php>. If the third parameter (<php>$return_array_key</php>) is <php>true</php>, the function returns the array index. Otherwise the function returns the corresponding array value. 

==== Examples ====

<PHP>
$array = [
    'dog',
    'cat',
    'cow',
    'duck',
    'goose',
    'elephant'
];

// Find the first animal name, which are longer than 4 characters.
var_dump(array_find($array, function (string $value) {
    return strlen($value) > 4;
})); // string(5) "goose"
</PHP>

===== Backward Incompatible Changes =====

Functions created by the user and named <php>array_find</php> lead to a PHP error with the new version. 

===== Proposed PHP Version(s) =====

PHP 8.4

===== RFC Impact =====
==== To SAPIs ====

None.

==== To Existing Extensions ====

None.

==== To Opcache ====

None.

==== New Constants ====

None.

==== php.ini Defaults ====

None.

===== Open Issues =====

None. 

===== Unaffected PHP Functionality =====

This RFC only adds a new function to PHP and only affects previously defined functions which are named as the proposed function. 


===== Patches and Tests =====

tba


===== References =====

tba