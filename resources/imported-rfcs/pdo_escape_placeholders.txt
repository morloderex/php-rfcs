====== PHP RFC: Escape PDO placeholders ======
  * Version: 0.1
  * Date: 2016-12-18
  * Author: Matteo Beccati <mbeccati@php.net>
  * Status: Pre-Draft
  * First Published at: http://wiki.php.net/rfc/pdo_escape_placeholders

===== Introduction =====
PostgreSQL, and possibly other databases, allow the usage of the question mark ("?") character in operators, either alone or part of a multi-character operator. In fact, as of today, core Postgres currently has 21
operators that include it in their names. Most of them belong to geometric types, but 3 of them apply to the //jsonb// type, which has been introduced in Postgres 9.4 and has a much wider and growing audience. Unfortunately it is impossible to use them with the PDO extension, due to a clash with the positional placeholder, which can't currently be disabled or escaped.

===== Proposal =====
Improve the PDO SQL parser so that question marks can be escaped by doubling them, in order to follow the SQL standard.


To [[http://news.php.net/php.internals/66051|paraphrase Zeev Suraski]], explain hows the proposal brings substantial value to be considered
for inclusion in one of the world's most popular programming languages.

Remember that the RFC contents should be easily reusable in the PHP Documentation.

If applicable, you may wish to use the language specification as a reference.

===== Backward Incompatible Changes =====
What breaks, and what is the justification for it?

===== Proposed PHP Version(s) =====
List the proposed PHP versions that the feature will be included in.  Use relative versions such as "next PHP 7.x" or "next PHP 7.x.y".

===== RFC Impact =====
==== To SAPIs ====
No impact.

==== To Existing Extensions ====
All PDO drivers will be somehow affected by the change, but there is no API change.

==== To Opcache ====
No impact.

===== Open Issues =====
Make sure there are no open issues when the vote starts!

===== Unaffected PHP Functionality =====
List existing areas/features of PHP that will not be changed by the RFC.

This helps avoid any ambiguity, shows that you have thought deeply about the RFC's impact, and helps reduces mail list noise.

===== Future Scope =====
This sections details areas where the feature might be improved in future, but that are not currently proposed in this RFC.

===== Proposed Voting Choices =====
Include these so readers know where you are heading and can discuss the proposed voting options.

State whether this project requires a 2/3 or 50%+1 majority (see [[voting]])

===== Patches and Tests =====
Links to any external patches and tests go here.

If there is no patch, make it clear who will create a patch, or whether a volunteer to help with implementation is needed.

Make it clear if the patch is intended to be the final patch, or is just a prototype.

For changes affecting the core language, you should also provide a patch for the language specification.

===== Implementation =====
After the project is implemented, this section should contain 
  - the version(s) it was merged to
  - a link to the git commit(s)
  - a link to the PHP manual entry for the feature
  - a link to the language specification section (if any)

===== References =====
Links to external references, discussions or RFCs

===== Rejected Features =====
Keep this updated with features that were discussed on the mail lists.