====== PHP RFC: Throwable error code's type generalization ======

  * Version: 0.1
  * Date: 2016-12-18
  * Author: Wes (@WesNetmo on Twitter)
  * Status: Under Discussion
  * First Published at: http://wiki.php.net/rfc/throwable-code-generalization

===== Introduction =====

Currently ''Exception::$code'', ''Error::$code'' and ''Throwable::getCode()'' are said to be ''int'' only, but this is actually violated by PHP itself, specifically by the PDO extension, whose error codes are instead strings.

As such, code that assumes that the interface always uses ''int'' is already potentially broken - because it doesn't special-case PDO - or it does already special-case the type so that PDO's errors don't create issues.

===== Proposal =====

As this inconsistency is present, this RFC proposes to generalize the Throwable's code so that it can be of any type - not just ''int''. In practice this is mostly a documentation change because the ''int'' type is currently almost [[https://3v4l.org/BoF4U|not actually enforced]].

Throwables' codes are normally not needed, and even if they were, numeric ones aren't comfortable to work with. Allowing any type can open up to new possibilities for this property that is currently almost useless, like Enum/EnumSet-like objects, strings, etc.

Specifically, the following members are proposed to be modified:

  * ''Throwable::getCode(): mixed;''
  * ''Error::%%__%%construct(string $message = "", mixed $code = 0, Throwable $previous = null);''
  * ''Exception::%%__%%construct(string $message = "", mixed $code = 0, Throwable $previous = null);''
  * ''protected mixed Error::$code;''
  * ''protected mixed Exception::$code;''

===== Backward Incompatible Changes =====
None.

===== Proposed PHP Version(s) =====
7.2

===== Voting =====

2/3 majority is required



===== Patches and Tests =====
N/A

===== References =====
[[http://externals.io/thread/573|Discussion on externals.io]]