====== Request for Comments: array_delete() for elements deletion ======
  * Version: 0.1
  * Date: 2012-08-21
  * Author:  Rasmus Schultz <rasmus@mindplay.dk>
  * Status: Under Discussion
  * First Published at: http://wiki.php.net/rfc/array_delete
===== Introduction =====

Deleting array element(s) are easy task. It's just

<code php>
unset($array['key']);
</code>

If user would like to delete some elements by it value, they can use array_walk()
to delete elements.

<code php>
array_walk($array, function($val, $key) use (&$array) {if ($val== 3) unset($array[$key]);});
</code>

It's a simple code, but it seems rather difficult for novices. For example, Stack Overflow's answers do not 
have correct array_walk() answer, but have array_filter() which creates new array rather than deleting element(s).

http://stackoverflow.com/questions/7225070/php-array-delete-by-value-not-key


===== New API for deleting elements =====

There is no array element deletion functions, but generic array_walk()/array_walk_recursive().

  int array_delete(&$array, callable)
  
  callable takes 2 arguments, element value as 1st, element key as 2nd(optional).
  If callable returns true, array_delete() deletes the element.
  
  array_delete() returns number of deleted elements. It returns false when error.

  int array_delete_recursive(&$array, callable)
  This is recursive version of array_delete()

===== Proposal and Patch =====

No patch yet.

===== Reference =====

  * PHP Internals discussion - http://www.serverphorums.com/read.php?7,546905
  * Stack Overflow answers - http://stackoverflow.com/questions/7225070/php-array-delete-by-value-not-key

===== Changelog =====

  * 0.1 Initial version 2012/08/21