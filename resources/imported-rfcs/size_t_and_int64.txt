
====== PHP RFC: size_t for string length and 64 bit integer support for zval ======
  * Version: 0.1
  * Date: 2013-12-05
  * Author: Anatol Belski, ab@php.net
  * Status: Draft


===== Introduction =====

Current PHP zval datatype implementation uses "long" datatype to handle signed integer and "int" datatype to handle string length. The most 64 bit capable platforms PHP is used on are LLP64 (Windows) and LP64 (Linux/most Unix-like). The data model used for the relevant datatypes on those platforms looks as follows

^  ^ string size ^ signed integer ^
^ Platform ^ int ^ long ^
| LLP64 | 32 bit | 32 bit |
| LP64 | 32 bit | 64 bit |

Regarding PHP that means, even on 64 bit platforms
  * strings >= 2^31 cannot be handled
  * on Windows 64 bit integers aren't available

To fix this, the following datatypes are suggested

^ Platform ^ string size ^ unsigned integer ^
| LLP64 |  unsigned <nowiki>__int64</nowiki> | <nowiki>__int64</nowiki>  |
| LP64 | unsigned long long | long long |

The suggested datatypes are guaranteed 64 bit which makes PHP work consistent on any 64 bit platforms.

===== Proposal =====

All the features and examples of the proposal.

To [[http://news.php.net/php.internals/66051|paraphrase Zeev Suraski]], explain hows the proposal brings substantial value to be considered
for inclusion in one of the world's most popular programming languages.

Remember that the RFC contents should be easily reusable in the PHP Documentation.
===== Backward Incompatible Changes =====

What breaks, and what is the justification for it?

===== Proposed PHP Version(s) =====

next PHP 5.x

===== SAPIs Impacted =====

Describe the impact to CLI, Development web server, embedded PHP etc.

===== Impact to Existing Extensions =====

Will existing extensions be affected?

===== New Constants =====

Describe any new constants so they can be accurately and comprehensively explained in the PHP documentation.

===== php.ini Defaults =====

If there are any php.ini settings then list:
  * hardcoded default values
  * php.ini-development values
  * php.ini-production values

===== Open Issues =====

Make sure there are no open issues when the vote starts!

===== Unaffected PHP Functionality =====

List existing areas/features of PHP that will not be changed by the RFC.

This helps avoid any ambiguity, shows that you have thought deeply about the RFC's impact, and helps reduces mail list noise.

===== Future Scope =====

This sections details areas where the feature might be improved in future, but that are not currently proposed in this RFC.

===== Proposed Voting Choices =====

Include these so readers know where you are heading and can discuss the proposed voting options.

===== Patches and Tests =====

Links to any external patches and tests go here.

If there is no patch, make it clear who will create a patch, or whether a volunteer to help with implementation is needed.

Make it clear if the patch is intended to be the final patch, or is just a prototype.

===== Implementation =====

After the project is implemented, this section should contain 
  - the version(s) it was merged to
  - a link to the git commit(s)
  - a link to the PHP manual entry for the feature

===== References =====

Links to external references, discussions or RFCs

===== Rejected Features =====

Keep this updated with features that were discussed on the mail lists.