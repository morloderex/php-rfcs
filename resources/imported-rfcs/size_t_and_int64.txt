
====== PHP RFC: 64 bit platform improvements for string length and integer in zval ======
  * Version: 0.1
  * Date: 2013-12-05
  * Author: Anatol Belski, ab@php.net
  * Status: Draft


===== Introduction =====

Current PHP zval datatype implementation uses "long" datatype to handle signed integer and "int" datatype to handle string length. The most 64 bit capable platforms PHP is used on are **LLP64** (Windows) and **LP64** (Linux/most Unix-like). The data model used for the relevant datatypes on those platforms looks as follows

^  ^ string size ^ signed integer ^
^ Platform ^ int ^ long ^
| LLP64 | 32 bit | 32 bit |
| LP64 | 32 bit | 64 bit |
\\ 
Regarding PHP that means today, even on 64 bit platforms
  * strings >= 2^31 cannot be handled
  * on Windows 64 bit integers aren't available
\\ 
To fix this, the following datatypes are suggested

^ Platform ^ string size ^ unsigned integer ^
| LLP64 |  unsigned <nowiki>__int64</nowiki> | <nowiki>__int64</nowiki>  |
| LP64 | unsigned long long (uint64_t) | long long (int64_t)|

\\ 
The suggested datatypes are guaranteed to be 64 bit which makes PHP work consistent on any 64 bit platforms. Accompanying fixes include file offsets and other descriptor APIs ensuring full 64 bit support.

===== Proposal =====

Currently int64 support is disabled by default, size_t support is enabled by default

  * to build with size_t and int64 support use --enable-zint64 , size_t is enabled by default
  * to build without size_t and int64 support, use --enable-zstrlen , int64 is disabled by default

==== Relevant headers ====

  * Zend/zend_types.h
  * Zend/zend_int.h
  * Zend/zend_stream.h
  * main/php_stream.h

==== Datatypes ====
Enabled by size_t configure option

^ Old datatype ^ New datatype alias ^ Comment ^ 
| - | zend_str_size | |
| int | zend_str_size_int | |
| uint, zend_uint | zend_str_size_uint |
| size_t | zend_str_size_size_t | |
| long   | zend_str_size_long | |
 
This alias is suggested to be replaced with zend_size_t and php_size_t in the final patch.

Enabled by int64 configure option 

^ Old datatype ^ New datatype ^ Comment ^ 
| long | zend_int_t | Aliased with php_int_t in php.h |
| ulong, unsigned long | zend_uint_t | Aliased with php_uint_t in php.h |
| off_t | zend_off_t | |
| struct stat, struct _stat, struct _stat64 | zend_stat_t | Corresponding stat function aliases have to be used |  

**BE AWARE OF WHAT size_t IS, READ SOME DOC BEFORE STARTING TO AVOID TRIVIAL MISTAKES**


==== Function aliases ====
Enabled by int64 configure option 
^ function(s) ^ Alias ^ Comment ^ 
| stat, _stat64 | zend_stat | for use with zend_stat_t |
| fstat, _fstat64 | zend_fstat | for use with zend_stat_t |
| lseek, _lseeki64 | zend_lseek | for use with zend_stat_t |
| ftell, _ftelli64 | zend_ftell | for use with zend_stat_t |
| fseek, _fseeki64 | zend_fseek | for use with zend_stat_t |
| snprintf with "%ld" or "%lld", _ltoa_s, _i64toa_s | ZEND_ITOA | for use with zend_int_t|
| atol, atoll, _atoi64 | ZEND_ATOI | for use with zend_int_t |
| strtol, strtoll, _strtoi64 | ZEND_STRTOL| for use with zend_int_t |
| strtoul, strtoull, _strtoui64 | ZEND_STRTOUL|for use with zend_int_t |

==== Macroses ====
Enabled by size_t configure option

^ Old ^ New ^ Comment ^
| Z_STRLEN | Z_STRSIZE | as well the whole Z_STRLEN_* family |
| IS_LONG | IS_INT | replacement not done yet |
| RETURN_LONG | RETURN_INT | replacement not done yet |
| RETVAL_LONG | RETVAL_INT | replacement not done yet |
| Z_LVAL | Z_IVAL | as well the whole Z_LVAL_* family, replacement not done yet |
| ..... |
Generally speaking, every occurence mentioning "long" in macros or function names should be replaced with a neutral keyword, suggested "int".

Enabled by int64 configure option

^ Old ^ New ^ Comment ^
| - | ZEND_INT_MAX | Aliased with PHP_INT_MAX in php.h, replaces LONG_MAX where appropriate |
| - | ZEND_INT_MIN | Aliased with PHP_INT_IN in php.h, replaces LONG_MIN where appropriate |
| - | ZEND_UINT_MAX | ULONG_MAX |
| - | SIZEOF_ZEND_INT | Replaces SIZEOF_ZEND_LONG where appropriate | 

==== Accepting values from userland with zend_parse_parameters() ====
Enabled by size_t configure option

^ Old ^ New ^ Comment ^
| "s" | "S" | accept string argument, the length has to be declared as zend_str_size, to replace the string length related variables with size_t, the appropriate macros from Zend/zend_types.h should be used (zend_str_size_int, zend_str_size_long, etc.)|
| "p" | "P" | accept path argument |

Enabled by int64 configure option

^ Old ^ New ^ Comment ^
| "l" | "i" | to accept integer argument, the internal var has to be declared as php_int_t (inside PHP) or zend_int_t (inside Zend) |
| "L" | "I" | to accept integer argument with range check, the internal var has to be declared as php_int_t (inside PHP) or zend_int_t (inside Zend)|


==== prinf formats ====

New printf modifier 'p' was implemented to platform independently output php_int_t datatype. That modifier can be used with 'd', 'u', 'x' and 'o' printf format specs.

===== Backward Incompatible Changes =====

  * 'l', 'L', 's', 'p' parameter formats not available anymore

===== Proposed PHP Version =====

PHP 5.7


===== Impacts =====

  * collisions with dependency libraries using 32 bit integer datatypes (range checks needed)
  * existing extensions have to adapt zend_parsing_parameters() format
  * existing extensions have to use new APIs and macros for string length and integer



===== Open Issues =====

-

===== Unaffected PHP Functionality =====

It is a matter of the full 64 bit support, no real features are going to be changed, removed or added.
===== Future Scope =====

  * with further tweaks - enabling 64 bit integer even on 32 bit platform
  * easier to implement 128 bit support

===== Proposed Voting Choices =====

Include these so readers know where you are heading and can discuss the proposed voting options.

===== Patches and Tests =====

[[http://git.php.net/?p=php-src.git;a=shortlog;h=refs/heads/str_size_and_int64 | str_size_and_int64]] branch\\ 


===== References =====
[[rfc/string-size_t/progress| Patch progress page]]
\\ 
\\ 
[[http://grokbase.com/t/php/php-internals/135z59f0kz/5-next-integer-and-string-type-modifications | Initial discussion brought up by Anthony Ferrara]]
\\ 
[[http://grokbase.com/p/php/php-internals/137354x7hf/string-size-refactor-progress| Discussion after implementation start]]
\\ 

===== Implementation =====

After the project is implemented, this section should contain 
  - the version(s) it was merged to
  - a link to the git commit(s)
  - a link to the PHP manual entry for the feature

===== Rejected Features =====

-