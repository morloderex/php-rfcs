====== PHP RFC: Number Format Separator ======
  * Version: 1
  * Date: 2015-12-19
  * Author: Thomas Punt, tpunt@php.net
  * Status: Draft
  * First Published at: http://wiki.php.net/rfc/number_format_separator

===== Introduction =====
This RFC seeks to add support for using separators in numerical literals in PHP.
<code php>
1_000_000; // versus 1000000
3.141_592; // versus 3.141592
0x025_612; // versus 0x025612
0b0010_1101; // versus 0b00101101
</code>


===== Proposal =====
This feature seeks to enable for underscores to be used within any numerical literal in PHP to promote readability. The underscore has been chosen because of its wide usage in other languages for formatting numerical literals, including Java, Ruby, Elixir, etc.

The following semantics have been chosen:

  * Leading underscores are not allowed (conflicts with constant naming conventions)
  * Trailing underscores are not allowed (not beneficial, decreases readability)
  * Adjacent underscores are not allowed (not beneficial)
  * Underscores are not allowed around the period for floats, around the **0x** for hexadecimal numbers, or around the **0b** for binary numbers (not beneficial, decreases readability)

Invalid usage examples:
<code php>
_1; // interpreted as a constant

1_; // PHP Parse error:  syntax error, unexpected '_' (T_STRING) in ...

1__000; // PHP Parse error:  syntax error, unexpected '__000' (T_STRING) in

100_.0; // PHP Parse error:  syntax error, unexpected '_' (T_STRING) in...
100._01; // PHP Parse error:  syntax error, unexpected '_01' (T_STRING) in...
0x_0123; // PHP Parse error:  syntax error, unexpected 'x_0123' (T_STRING) in...
0b_0101; // PHP Parse error:  syntax error, unexpected 'b_0101' (T_STRING) in...
</code>

Other than the aforementioned rules, underscores may be freely interspersed between digits:
<code php>
100_000;
10_0.0_112;
0b01_10_11_00;
</code>

This RFC does not include stringy numerics because of the BC breakage involved. Support for these can be done in the next major version of PHP, if they're wanted.

===== Backward Incompatible Changes =====
There are no BC breaks with this feature.

===== Proposed PHP Version(s) =====
PHP 7.1

===== RFC Impact =====
==== To SAPIs ====

==== To Existing Extensions ====
No impact

==== To Opcache ====
No impact

==== New Constants ====
No impact

==== php.ini Defaults ====
No impact

===== Open Issues =====
None so far

===== Future Scope =====
Support for stringy numerics could be added in the next major version.

===== Proposed Voting Choices =====
A simple yes/no voting option. A 2/3 majority is required.

===== Patches and Tests =====
A patch has been made - this part will be updated soon.

===== Implementation =====
After the project is implemented, this section should contain 
  - the version(s) it was merged to
  - a link to the git commit(s)
  - a link to the PHP manual entry for the feature

===== References =====
Links to external references, discussions or RFCs

===== Rejected Features =====
Keep this updated with features that were discussed on the mail lists.