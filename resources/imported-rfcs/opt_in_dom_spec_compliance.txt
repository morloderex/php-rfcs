====== PHP RFC: Opt-in DOM spec-compliance ======
  * Version: 0.1
  * Date: 2024-01-14
  * Author: Niels Dossche <nielsdos@php.net>
  * Status: Draft
  * First Published at: https://wiki.php.net/rfc/opt_in_dom_spec_compliance

===== Introduction =====

The DOM extension in PHP is used to parse, query and manipulate XML/HTML documents. The DOM extension is based on the DOM specification.
Originally this was the DOM Core Level 3 specification, but nowadays, that specification has evolved into the current "Living Specification" maintained by WHATWG. Unfortunately, there are many bugs in PHP's DOM extension. Most of those bugs are related to namespace and attribute handling. This leads to people trying to work around those bugs by relying on more bugs, or on undocumented side-effects of incorrect behaviour, leading to even more issues in the end. Furthermore, some of these bugs [[https://github.com/php/php-src/issues/8388|may have security implications]].

Some of these bugs are caused because the method or property was implemented incorrectly back in the day, or because the original DOM 3 specification used to be unclear. A smaller part of this is because the specification has made breaking changes when HTML 5 first came along and the specification creators had to unify what browsers implemented into a single specification that everyone agreed on.

It's not possible to "just fix" these bugs because people actually rely on these bugs. They are also often unaware that what they're doing is actually incorrect or causes the internal document state to be inconsistent. We therefore have to fix this in a backwards-compatible way: i.e. a hard requirement is that all code written for the current DOM extension keeps working without requiring changes.
In short: the main problem is that 20 years of buggy behaviour means that the bugs have become ingrained into the system.

===== Proposal =====

TODO

===== Alternatives =====

Let's discuss some alternatives to this RFC.

==== Userland solutions ====

People have implemented userland DOM libraries on top of the existing DOM extension. However, even userland solutions can't fully work around issues caused by PHP's DOM extension. This is because those libraries still have to work with broken methods. I often receive bug reports from developers of such libraries regarding functionality they're using that don't fully interact well because they're relying indirectly on bugs and hacks. Some of those bugs are unfixable because they would break BC.
The real solution is to provide a BC-preserving fix at PHP's side.

==== An entirely new DOM extension ====

I basically copy-pasted this from my [[rfc:domdocument_html5_parser|HTML 5 RFC]].

One might wonder why we don't just create an entirely new DOM extension, based on another library, with HTML5 support. There are a couple of reasons:
  - Interoperability problems with other extensions (both within php-src and third-party).
  - Interoperability issues with userland code. Right now you can still import/adopt nodes from the "old DOM" to the "new DOM".
  - Additional maintenance work and complexity. A spec-compliance "mode" can share almost all code while a new extension cannot.
  - I don't have time to build this.

===== Backward Incompatible Changes =====

There are no BC breaks for the reasons given in the introduction.
The spec-compliance is opt-in.

===== Proposed PHP Version(s) =====

PHP 8.4.

===== RFC Impact =====

==== To Existing Extensions ====

First and third-party extensions are unaffected because the internal data structures and APIs remain the same.
Of course, the DOM extension itself is heavily affected.

===== Open Issues =====

None right now.

===== Future Scope =====

When this RFC lands, it will become much easier to add new features to the DOM extension.
Preferably, I will only add new features to the new classes and keep the old classes as-is.
An example of a new feature I have worked on based on the development branch of this RFC is native CSS selector support: https://github.com/nielsdos/php-src/pull/82

===== Proposed Voting Choices =====

One primary vote with 2/3 majority to accept this proposal as a whole.

===== Patches and Tests =====

PR: https://github.com/php/php-src/pull/13031

===== Implementation =====
After the project is implemented, this section should contain 
  - the version(s) it was merged into
  - a link to the git commit(s)
  - a link to the PHP manual entry for the feature
  - a link to the language specification section (if any)

===== References =====

Pre-RFC pitch: https://externals.io/message/122048

===== Changelog =====

* 0.1: Initial version under discussion
