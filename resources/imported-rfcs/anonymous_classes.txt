
====== PHP RFC: Anonymous Classes ======
  * Version: 0.1
  * Date: 2013-09-22
  * Author: Joe Watkins, krakjoe@php.net
  * Status: Draft
  * First Published at: http://wiki.php.net/rfc/anonymous_classes

===== Introduction =====

For some time PHP has featured anonymous function support in the shape of Closures; this patch introduces the same kind of functionality for objects of an anonymous class.

===== Backward Incompatible Changes =====

New syntax that will fail to parse in previous versions, so no BC breaks.

===== Proposed PHP Version(s) =====

5.6

===== SAPIs Impacted =====

All

===== Impact to Existing Extensions =====

No impact on existing libraries

===== New Constants =====

No new constants required 

===== php.ini Defaults =====

No new configuration directives required

===== Open Issues =====

N/A

===== Future Scope =====

The compiler has a limitation; it cannot nest class declarations, this means that a method cannot return an object of an anonymous class.
To work around this would cause considerable disturbance to Zend, I don't think it should be pursued.

===== Proposed Voting Choices =====

Straight forward, we should have this, we should not have this.

===== Syntax =====

<code php>
<?php
function my_factory_function($key, $value) {
    return new class {
        public function __construct($key, $value) {
            $this->key = $key;
            $this->value = $value;
        }
    } ($key, $value);
    
    /* ... */
}

var_dump (new class{});

function my_special_factory($data) {
    return new class extends MySpecialBase {
        /* ... */
    } ($data);
}
?>
</code>

===== Implementation =====

https://github.com/php/php-src/pull/470

===== Rejected Features =====

N/A