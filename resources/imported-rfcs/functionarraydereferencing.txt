====== Function Array Dereferencing (FAD) ======
  * Version: 1.0
  * Date: June 16, 2008 (added)
  * Date: May  01, 2009 (declined)
  * Date: June 07, 2010 (re-opened)
  * Author: Philip Olson <philip@php.net>, Felipe Pena <felipe@php.net>
  * Status: Open

===== Introduction =====

This RFC proposes the implementation of array dereferencing of method/function return.

===== Proposal and Patch =====

Patch: http://felipe.ath.cx/diff/array_dereference.diff

===== Examples =====
FAD adds the following:

<code php>
<?php

function fruit () {
  return array('a' => 'apple', 'b' => 'banana');
}

echo fruit()['a']; // apple

?>
</code>

Which is a quasi-replacement for this:

<code php>
<?php

function fruit () {
  return array('a' => 'apple', 'b' => 'banana');
}

$fruits = fruit();
echo $fruits['a'];

?>
</code>

Working with references:

<code php>
<?php

function &foo(&$foo) {
	return $foo;
}

$a = array(1);
foo($a)[0] = 2;
var_dump($a); // array(1) {  [0]=>  int(2) }

?>
</code>

Chaining:

<code php>
<?php

class foo {
	public $array = array();
	
	public function __construct() {
		$this->array = array(1, 2.3);
	}
	
	public function bar() {
		return $this->array;
	}
}

$foo = new foo;
var_dump($foo->bar()[1]); // float(2.3)
$foo->array[] = $foo;
var_dump($foo->bar()[2]->bar()[2]->array[0]); // int(1)

?>
</code>

===== Related discussion =====

The following discussions/threads have taken place:
  * April 3, 2004: http://markmail.org/message/sbnrb7nekwy7xt3x
  * November 9, 2006: http://markmail.org/message/5bv6mtd7zorni7gc
  * June 3, 2010: http://markmail.org/message/3ancnjwqhax47n2j
  * June 7, 2010: http://markmail.org/message/unplu5x3gjjjydwz [Patch proposal]