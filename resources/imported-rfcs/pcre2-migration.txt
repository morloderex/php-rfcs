====== PHP RFC: PCRE2 migration ======
  * Version: 0.9
  * Date: 2017-10-16
  * Author: Anatol Belski, ab@php.net
  * Status: Draft
  * First Published at: http://wiki.php.net/rfc/pcr2-migration


===== Introduction =====

PCRE is the base for many core functionalities in PHP. Currently it is based on 8.x series which a legacy library version today. It is supported by the mainstream, however no new feature implementations flow in there, it is a bugfix version only.

Still, as ext/pcre is the core functionality for PHP, and it is essential to keep it rolling. The up-to-date version is called PCRE2 and it pertains as currently actively supported, also it is where the new features are implemented. However, the API has certain differencies. As the original release announcement tells, PCRE2 should be taken as a new project https://lists.exim.org/lurker/message/20150105.162835.0666407a.en.html Nevertheless, it is the library with the same purpose, that inherits a lot from the original PCRE.

Today it's over two years past, since PCRE2 was released. Yes, the API is different, but to the big part is reusable compared to PCRE. It contains already features with no analogue to 8.x series. 


===== Proposal =====
Migrate PHP core to use PCRE2 with the focus on the maximum backward compatibility.

===== Backward Incompatible Changes =====
  * Internal library API has changed
  * The 'S' modifier has no effect, patterns are studied automatically.
  * The 'X' modifier is the default behavior in PCRE2. The current patch reverts the behavior to the meaning of 'X' how it was in PCRE, but it might be better to go with the new behavior and have 'X' turned on by default.

The current test suite passes with PCRE2 with almost no change to the tests. For sure there can be behavior differences, thus it is all the more important to start the QA as early as possible.

===== Proposed PHP Version(s) =====
PHP 7.3

==== Impact too SAPIs, existing extensions and Opcache ====
Code, that makes use of PCRE needs to be rewritten to match the PCRE2 API. Otherwise there's no impact. The current patch takes care of all the core items depending on PCRE.

==== New Constants ====
  * PCRE_MINOR
  * PCRE_MAJOR

===== Open Issues =====
Make sure there are no open issues when the vote starts!

===== Unaffected PHP Functionality =====
The userland code is unaffected. The 'S' modifier can persist, but won't take effect. The behavior of 'X' modifier was made same, whereby PCRE2 has 'X' on by default. Also, as mentioned in the impacts section, any C code not using PCRE is unaffected.

===== Future Scope =====
PCRE2 has quite a few things to offer. Please check the compiled version of the API changes here http://www.rexegg.com/pcre-documentation.html. Specifically to mention were the following

  * New pcre2_substitute() API
  * Serialization of JIT compiled code

===== Proposed Voting Choices =====
This is admittedly not a language change, though it's an important core functionality, thus require a 2/3 majority to pass.

===== Patches and Tests =====
https://github.com/php/php-src/pull/2857

===== Implementation =====
After the project is implemented, this section should contain 
  - the version(s) it was merged to
  - a link to the git commit(s)
  - a link to the PHP manual entry for the feature
  - a link to the language specification section (if any)

===== References =====
  * https://lists.exim.org/lurker/message/20150105.162835.0666407a.en.html
  * https://www.pcre.org/current/doc/html/pcre2.html
  * http://pcre.org/current/doc/html/pcre2api.html
  * http://pcre.org/news.txt
  * http://pcre.org/changelog.txt
  * http://www.pcre.org/original/changelog.txt

===== Rejected Features =====
Keep this updated with features that were discussed on the mail lists.