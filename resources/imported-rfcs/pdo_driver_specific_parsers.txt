====== PHP RFC: PDO Driver specific SQL parser ======
  * Version: 0.1
  * Date: 2024-04-11
  * Author: Matteo Beccati, mbeccati@php.net
  * Status: Draft 
  * First Published at: http://wiki.php.net/rfc/pdo_driver_specific_parsers

===== Introduction =====
The PDO extension contains a SQL parser that is used to find positional and named parameter placeholders and subsequently transform the SQL in a format that is accepted by the database is use. The SQL parser used in the PDO extension had historically being modelled to work with was the de-facto SQL standard in the PHP ecosystem, that is MySQL. However, the SQL dialect used by MySQL is different from standard SQL, which is used by other database vendors, e.g. PostgreSQL or SQLite. That means that PDO is misbehaving when certain queries are supplied, causing bugs (references here).

Also, in order to support the custom PostgreSQL "?" operator, the PDO SQL parser has been modified in a previous RFC.

===== Proposal =====
The proposal is to:

1. change the default PDO scanner to expect standard SQL only;
1. allow drivers to optionally provide a custom scanner function to handle their specific SQL dialect;
1. migrate the current scanner to pdo_mysql, cleaning it up of the PostgreSQL-specific handling of the "?" operator;
1. add a pdo_pgsql specific scanner, capable of dealing with the "?" operator

===== Backward Incompatible Changes =====
No expected BC breaks in userland.

===== Proposed PHP Version(s) =====
Next PHP 8.x

===== RFC Impact =====
==== To SAPIs ====
No impact

==== To Existing Extensions ====
The PDO_DRIVER_API constant will need to be bumped and external PDO driver extension will need some work to ensure compatibility.

==== To Opcache ====
No impact to opcache.

==== New Constants ====
No new constant.

==== php.ini Defaults ====
No php.ini changes

===== Open Issues =====
Make sure there are no open issues when the vote starts!

===== Unaffected PHP Functionality =====
Anything not PDO?

===== Future Scope =====
Check if any other database drive could benefit from a custom scanner.

===== Proposed Voting Choices =====
Include these so readers know where you are heading and can discuss the proposed voting options.

===== Patches and Tests =====
Links to any external patches and tests go here.

If there is no patch, make it clear who will create a patch, or whether a volunteer to help with implementation is needed.

Make it clear if the patch is intended to be the final patch, or is just a prototype.

For changes affecting the core language, you should also provide a patch for the language specification.

===== Implementation =====
After the project is implemented, this section should contain 
  - the version(s) it was merged into
  - a link to the git commit(s)
  - a link to the PHP manual entry for the feature
  - a link to the language specification section (if any)

===== References =====

https://externals.io/message/114016

===== Rejected Features =====
Keep this updated with features that were discussed on the mail lists.