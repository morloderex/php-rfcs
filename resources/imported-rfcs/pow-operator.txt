
====== PHP RFC: Power Operator ======
  * Version: 0.1
  * Date: 2013-11-23
  * Author: Tjerk Meesters, datibbaw@php.net
  * Status: Under Discussion
  * First Published at: http://wiki.php.net/rfc/pow-operator

===== Introduction =====

This proposal is two-fold:

  - Turn the existing [[http://php.net/pow|pow()]] function into a language construct.
    * Avoids a function call.
    * Support for [[rfc:operator_overloading_gmp|GMP overloading]].
  - Introduce an exponential operator ''<nowiki>**</nowiki>'' and ''<nowiki>**=</nowiki>''.
    * Easier to read and shorter to write.
    * Can be found in other languages.

===== Proposal =====

The new operator allows writing exponents like this:

<code php>
echo 2 ** 3; // 8
</code>

It also supports [[operator_overloading_gmp|GMP overloading]]:

<code php>
$base = gmp_init(2);
$exponent = 3;
var_dump($base ** $exponent);

// output
object(GMP)#3 (1) {
  ["num"]=>
  string(1) "8"
}
</code>

The exponent combined with assignment:

<code php>
$x = 2;
$x **= 3;
echo $x; // 8
</code>

**Operator precedence and associativity**

The operator precedence is higher than the bitwise not (~) and lower than array dereferencing. The proposed associativity is right. The behaviour is illustrated with the following cases:

<code php>
echo 2 ** 3 ** 2; // 512
echo ~3 ** 2; // -10
// mentioned under discussion, see below
echo -3 ** 2; // -9
</code>

===== Discussion =====

==== Language construct ====

> Could we turn the regular ''pow()'' function into a language construct?

This is now implemented. The original ''pow()'' function now references the internal ''pow_function()''.

The output of ''pow([], 2)'' is now defined as ''int(0)'' instead of the original ''float(0)''.

==== Exponent assignment ====

> Should we also make ''$x <nowiki>**</nowiki>= 2'' to mean ''$x = $x <nowiki>**</nowiki> 2;''

This is now implemented.
==== Precedence ====

> Shouldn't ''-3 <nowiki>**</nowiki> 2'' be evaluated as ''(-3) <nowiki>**</nowiki> 2'' to avoid confusion?

This is possible by giving the unary minus a higher precedence than ''<nowiki>**</nowiki>'', as seen in ColdFusion (for instance). Doing this would result in the following behaviour:

<code php>
-3 ** 2   // 9
1 -3 ** 2 // -8
</code>

However, the bare notation violates mathematical laws and thus will not be added to the proposal.
==== Associativity ====

> Should ''2 <nowiki>**</nowiki> 3 <nowiki>**</nowiki> 2'' yield ''64'' (left associative), ''512'' (right associative) or throw an error (non associative)?

The author's personal opinion is that the exponent operator evaluation order should be based on [[http://en.wikipedia.org/wiki/Tetration|Tetration]] and therefore be right associative. 

An acceptable compromise is making it non associative, requiring developers to put parentheses for disambiguation.

**Languages with left associative exponential operator**

  * VB (not by choice imho)
  * Basic
  * Octave
  * Matlab
  * D
  * ColdFusion

** Languages with right associative exponential operator**

  * Haskell
  * R
  * F#
  * Ruby
  * Perl
  * Python
  * Mathematica
  * Freemat
  * Scilab
  * Tcl
  * Cobol
  * Fortran
  * Sage
  * Bash

**Languages with non associative exponential operator**

  * Ada

**Sources**
  * https://plus.google.com/u/0/104277466162910953762/posts/e3jCt51VfmD
  * http://perldoc.perl.org/perlop.html
  * http://www.tcl.tk/cgi-bin/tct/tip/274.html
  * http://book.realworldhaskell.org/read/getting-started.html
  * http://www.nku.edu/~foxr/CSC407/NOTES/ch7.pptâ€Ž (second slide)
===== Proposed PHP Version(s) =====

Next PHP 5.x

===== Impact to Existing Extensions =====

The opcode ''ZEND_POW <165>'' and ''ZEND_ASSIGN_POW <166>'' is added.

External extensions such as [[http://pecl.php.net/package/vld|vld]] or [[https://github.com/krakjoe/phpdbg|phpdbg]] would have to be updated, but I'm not aware of any core extensions that would otherwise be affected.

===== Open Issues =====

None.


===== Proposed Voting Choices =====

**Inclusion vote**

Whether to include support for the operator:

  * Yes;
  * No.

**Associativity vote**

If included, whether to support either of the following:

  * Right associative; ''2 <nowiki>**</nowiki> 3 <nowiki>**</nowiki> 2 == 512''
  * Non associative; throw a parse error,

===== Patches and Tests =====

Power operator:

https://github.com/datibbaw/php-src/compare/master...pow-operator
