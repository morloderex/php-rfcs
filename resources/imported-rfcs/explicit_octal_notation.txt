====== PHP RFC: Explicit octal integer literal notation ======
  * Version: 1.0
  * Date: 2020-10-20
  * Author: George Peter Banyard, <girgias@php.net>
  * Status: Draft
  * First Published at: https://wiki.php.net/rfc/explicit_octal_notation

===== Introduction =====
PHP's literal octal notation can lead to some confusing results such as <php>"016" == 016</php> evaluating to false. This is because "016" is evaluated as an octal integer and resolves to ''14''.

This convention for octal integers is well established and followed by many programming languages (Java, C, C#, Golang, Haskell, and more). However, Python, JavaScript, and Rust [[https://docs.python.org/3/reference/lexical_analysis.html#integer-literals|[1]]][[https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Numbers_and_dates|[2]]][[https://doc.rust-lang.org/rust-by-example/primitives/literals.html|[3]]] only accept or support an explicit octal notation ''0o''.

===== Behaviour of numeric strings =====
As of PHP 7.0, hexadecimal numbers in strings are not considered numeric [[rfc:remove_hex_support_in_numeric_strings|[4]]], as the behaviour was inconsistent with type casting. Adding support for type casting was considered but not implemented as
<blockquote>supporting octal numbers is not possible, because handling the string '0123' as the number 83 would be highly unexpected for end users of an application.</blockquote>

Therefore, support for strings is left for a separate RFC.

===== Proposal =====
Add support for the explicit octal notation ''0o'' for integer literals analogous to ''0x'' and ''0b'' for hexadecimal and binary.

===== Backward Incompatible Changes =====
None

===== Proposed PHP Version(s) =====
Next PHP 8.x.

===== RFC Impact =====
==== To Existing Extensions ====
Added support to the GMP extension.

==== To Opcache ====
None

===== Unaffected PHP Functionality =====
Implicit octal notation is unaffected.

===== Future Scope =====
  * Deprecate the implicit octal notation.
  * Support hexadecimal, octal, and binary numbers in strings

===== Proposed Voting Choices =====
Per the Voting RFC, there is a single Yes/No vote requiring a 2/3 majority for this proposal to be accepted.

<doodle title="Add support for explicit octal notation" auth="girgias" voteType="single" closed="true">
   * Yes
   * No
</doodle>

===== Patches and Tests =====
GitHub patch: https://github.com/php/php-src/pull/6360

Language specification patch TBD.

===== Implementation =====
After the project is implemented, this section should contain 
  - the version(s) it was merged into
  - a link to the git commit(s)
  - a link to the PHP manual entry for the feature
  - a link to the language specification section (if any)

===== References =====
[[https://docs.python.org/3/reference/lexical_analysis.html#integer-literals|[1]]] Python language reference about integer literals \\
[[https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Numbers_and_dates|[2]]] JavaScript language references about numbers \\
[[https://doc.rust-lang.org/rust-by-example/primitives/literals.html|[3]]] Rust language reference about literals \\
[[rfc:remove_hex_support_in_numeric_strings|4]] PHP RFC: Remove hex support in numeric strings

