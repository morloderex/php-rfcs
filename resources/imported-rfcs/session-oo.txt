====== Object oriented session handlers  ======
  * Version: 1.0
  * Date: 2011-06-03
  * Author: Arpad Ray <arpad@php.net>
  * Status: Under Discussion
  * First Published at: http://wiki.php.net/rfc/session-oo
  * Original discussion: http://marc.info/?l=php-internals&m=125886685408121&w=2

===== Introduction =====

This patch allows users to extend session handlers in an object oriented fashion.

Currently users must override all six functions and have no way of calling the original ones.

This patch exposes the original handler (files, memcached, etc.) in a new internal class called SessionHandler, and alters session_set_save_handler() to also accept a class name or object.

Example uses of overriding/wrapping individual methods of a handler:
  * Transparently adding encryption
  * Custom GC logic
  * Logging

===== Example =====

<code php>
<?php
class MySession extends SessionHandler {
	public static function read($key) {
		return str_rot13(parent::read($key));
	}

	public static function write($key, $data) {
		return parent::write($key, str_rot13($data));
	}
}

session_set_save_handler('MySession');

?>
</code>

===== Usage notes =====

  * Calling session_set_save_handler(class) after session_set_save_handler(a, b, c, d, e, f) wouldn't transparently extend the first call since they share the same storage. However this can be achieved by calling the former functions manually from the class.
  * Likewise multiple session_set_save_handler(class) calls simply replace each other; just extend the new class from the old one instead of SessionHandler to chain them.
  * An E_WARNING error is raised if the (parent) SessionHandler class is used (read/write/close/destroy) before open is called.
  * Calling session_set_save_handler(object) merely gets the class from the object and proceeds as if session_set_save_handler(class) were called.

===== Patch =====

The patch is available at http://spellign.com/patches/php-trunk-session-oo7.patch

===== Changelog =====

2011-06-03	Arpad Ray: Initial RFC creation

