====== PHP RFC: Counting of non-countable objects ======
  * Version: 0.4
  * Date: 2016-10-04
  * Author: Craig Duncan <git@duncanc.co.uk>
  * Proposed version: PHP 7.2
  * Status: Voting
  * ML thread: http://externals.io/thread/350

===== Introduction =====

Calling ''count()'' on a scalar or object that doesn't implement the Countable interface (http://php.net/manual/en/class.countable.php) returns 1.
There are no known use cases for this, and it can easily hide bugs, take the following example:
<code php>
function handle_records(iterable $iterable)
{
    if (count($iterable) === 0) {
        return handle_empty();
    }

    foreach ($iterable as $value) {
        handle_value($value);
    }
}
</code>
Passing a Generator that yields nothing would not call ''handle_empty()'', or ''handle_value()'', or alert the developer to the issue.

===== Proposal =====

This RFC proposes adding a warning when calling ''count()'' with a parameter that is a scalar, null, or an object that doesn't implement Countable.

//Note that the sizeof alias is also affected.// http://php.net/manual/en/function.sizeof.php

===== Backward Incompatible Changes =====

The call to ''count()'' will still return 1 (or 0 for null) so backwards compatibility is maintained.

Environments that display warnings or convert them to more severe errors/exceptions would be affected, but this should just bring attention to a bug in the code.

===== Proposed PHP Version(s) =====

PHP 7.2

===== Proposed Voting Choices =====

Simple Yes/No vote that doesn't change the language itself so requires 50% + 1 votes to get 'accepted'. 

===== Vote =====

<doodle title="Counting of non-countable objects" auth="duncan3dc" voteType="single" closed="false">
   * Yes
   * No
</doodle>

===== Patches and Tests =====

Patch to handle the change:
https://github.com/duncan3dc/php-src/commit/ea03689a800dfeb0b94b0b7a2a0ed837c280f27f

Example tests:
https://github.com/duncan3dc/php-src/commit/3e4fa60b63c94a7015d09f7310e6653ece86db05

=====References =====

Initial discussion that led to this RFC's creation:
https://github.com/php/php-src/pull/1672
