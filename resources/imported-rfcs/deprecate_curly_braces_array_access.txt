====== PHP RFC: Deprecate curly braces syntax for accessing array element or string offset. ======
  * Version: 0.9
  * Date: 2019-03-12
  * Author: Andrey Gromov, andrewgrom@rambler.ru
  * Status: Draft
  * First Published at: https://wiki.php.net/rfc/deprecate_curly_braces_array_access?do=edit

This is a suggested template for PHP Request for Comments (RFCs). Change this template to suit your RFC.  Not all RFCs need to be tightly specified.  Not all RFCs need all the sections below.
Read https://wiki.php.net/rfc/howto carefully!

===== Introduction =====
<blockquote>Both square brackets and curly braces can be used interchangeably for accessing array elements (e.g. $array[42] and $array{42} will both do the same thing in the example above).</blockquote>

===== Proposal =====
Deprecate curly braces syntax for accessing array element and string offset.

Reasons to deprecate curly braces syntax::
  - Two ways to do the same thing.
  - It is very rarely used nowadays.
  - It is almost not documented. There is only two short "NOTE" about it.
  - Also, this syntax has reduced functionality. You can't use it for pushing element into array "$arr{} = 1;", creating array "$a={1,2};" or in other similar cases.
  - Deprecation and following removal will free this syntax for other features. For example: array/string slice, absolute offset access, "windows" (like "slice" in GoLang), etc.

---------------------
<code php>
<?php
$arr=[1,2,3];

var_dump($arr{1});
</code>

Output
<code>

Warning: Array and string offset access syntax with curly braces is deprecated in /root/php-src/1.php on line 4
int(2)

</code>

===== Backward Incompatible Changes =====
Yes.

===== Proposed PHP Version(s) =====
PHP 7.4

===== Future Scope =====
Change to E_COMPILE_ERROR in PHP 8.0.
Remove in PHP 8.1.

===== Patches and Tests =====

https://github.com/php/php-src/compare/PHP-7.4...rjhdby:deprecate_alternate_array_access

Migration script.
https://github.com/rjhdby/php-src/blob/deprecate_alternate_array_access/convert_array_access_braces.php

