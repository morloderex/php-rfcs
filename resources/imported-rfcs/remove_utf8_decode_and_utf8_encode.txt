====== PHP RFC: Your Title Here ======
  * Version: 0.1
  * Date: 2021-04-02
  * Author: Rowan Tommins <rowan.collins@gmail.com>
  * Status: Draft
  * First Published at: https://wiki.php.net/rfc/remove_utf8_decode_and_utf8_encode

===== Introduction =====

The built-in functions utf8_encode and utf8_decode convert strings encoded in ISO-8859-1 ("Latin 1") to and from UTF-8, respectively. While this is sometimes a useful feature, they are commonly misunderstood, for three reasons:

* Their names suggest a more general use than their implementation actually allows.
* The Latin 1 encoding is commonly confused with other encodings, particularly Windows Code Page 1252.
* They are implemented in such a way that incorrect use never produces any messages to the user, and is only spotted later when text has been corrupted, possibly unrecoverably.

This RFC takes the view that their inclusion under the current name does more harm than good, and that users should be encouraged to find more appropriate functions for their use cases.

===== Proposal =====

* In PHP 8.1, all uses of utf8_encode and utf8_decode will raise an E_DEPRECATED diagnostic. [TODO: Specify custom message?]
* In PHP 9.0, the utf8_encode and utf8_decode functions will be removed from the language.

===== Historical background =====

The functions were originally added as internal functions in the XML extension, and were [[https://github.com/php/php-src/commit/e79e9fade6694ab8485c8722dfdc84b0c866ccc1|exposed to userland in 2006]]. They remained part of that extension (and thus technically optional) until [[https://github.com/php/php-src/pull/2160|Andrea Faulds moved them to ext/standard in PHP 7.2]]. At the same time, [[https://github.com/php/doc-en/commit/838941f6cce51f3beda16012eb497b26295a8238|she reworded the documentation page]] which previously consisted mostly of a long explanation of UTF-8, and little explanation of the functions themselves.

This was the result of initial discussion on [[https://wiki.php.net/rfc/remove_utf_8_decode_encode|a previous RFC by Yasuo Ohgaki]] which is effectively abandoned.

===== Problems with the current functions =====

==== Poor naming ====

Character encoding issues are often poorly understood, and users will often look for a "quick fix" that just makes their UTF-8 "work properly". The names "utf8_encode" and "utf8_decode" suggest functions that will do exactly that, and these functions are frequently used in functions called things like "fix_utf8" or "ensure_utf8".

While the language can never protect users from ever misunderstanding, it is at least unfortunate to include functions whose functionality could not be guess without looking at the manual.

==== Confusion around Latin-1 encoding ====

[[https://en.wikipedia.org/wiki/ISO/IEC_8859-1|ISO-8859-1]], or Latin 1, is an 8-bit ASCII-compatible encoding standardised in 1985. It is notably the basis for the first 256 code points of Unicode.

There are two closely related encodings:

* [[https://en.wikipedia.org/wiki/ISO/IEC_8859-15|ISO-8859-15]] ("Latin 9") is an official replacement standard, replacing some printable characters with others that were deemed more useful. For instance, the "universal currency symbol" (¤, U+00A4) is replaced with the Euro symbol (€, U+20AC).
* [[https://en.wikipedia.org/wiki/Windows-1252|Windows Code Page 1252]] is a proprietary encoding developed by Microsoft which adds //additional// printable characters in place of the rarely used extra control codes. For instance, the Euro sign is placed at position 0x80.





===== Backward Incompatible Changes =====
Yep, all of them...

===== Proposed PHP Version(s) =====
List the proposed PHP versions that the feature will be included in.  Use relative versions such as "next PHP 8.x" or "next PHP 8.x.y".

===== RFC Impact =====

==== To Existing Extensions ====

The internal functions will be moved back to ext/xml, but no longer exposed as userland functions.

===== Open Issues =====
Make sure there are no open issues when the vote starts!

===== Unaffected PHP Functionality =====
List existing areas/features of PHP that will not be changed by the RFC.

This helps avoid any ambiguity, shows that you have thought deeply about the RFC's impact, and helps reduces mail list noise.

===== Future Scope =====
This section details areas where the feature might be improved in future, but that are not currently proposed in this RFC.

===== Proposed Voting Choices =====
Include these so readers know where you are heading and can discuss the proposed voting options.

===== Patches and Tests =====
Links to any external patches and tests go here.

If there is no patch, make it clear who will create a patch, or whether a volunteer to help with implementation is needed.

Make it clear if the patch is intended to be the final patch, or is just a prototype.

For changes affecting the core language, you should also provide a patch for the language specification.

===== Implementation =====
After the project is implemented, this section should contain 
  - the version(s) it was merged into
  - a link to the git commit(s)
  - a link to the PHP manual entry for the feature
  - a link to the language specification section (if any)

===== References =====
Links to external references, discussions or RFCs

===== Rejected Features =====
Keep this updated with features that were discussed on the mail lists.