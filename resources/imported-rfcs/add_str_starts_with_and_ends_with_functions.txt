====== PHP RFC: Add str_starts_with() and str_ends_with() functions ======
  * Version: 0.4
  * Date: 2020-03-25 (**Updated**: 2020-04-04)
  * Author: Will Hudgins, will@wkhudgins.info
  * Status: Under Discussion
  * First Published at: https://wiki.php.net/rfc/add_str_starts_with_and_ends_with_functions

===== Introduction =====
''str_starts_with'' checks if a string, //s//, begins with another string, //s′// and returns a boolean value (''true''/''false'') if //s// starts with //s′//. 
''str_ends_with'' checks if a a string, //s//, ends with another string, //s′// and returns a boolean value (''true''/''false'') if //s// ends with //s′//. 

Typically this functionality is accomplished by repurposing existing string functions such as  '[[http://php.net/manual/en/function.substr.php|substr]]', '[[http://php.net/manual/en/function.strncmp.php|strncmp]]', '[[http://php.net/manual/en/function.strpos.php|strpos]]', or '[[http://php.net/manual/en/function.substr_compare.php|substr_compare]]'. These bespoke userland implementations have various downsides, discussed later in this RFC.

The ''str_starts_with'' and ''str_ends_with'' functionality is so important, and so problematic to leave to userland, that many major PHP frameworks support it including [[https://symfony.com/doc/current/components/string.html#usage|Symfony]], [[https://laravel.com/docs/7.x/helpers#method-starts-with|Laravel]],[[https://www.yiiframework.com/doc/api/2.0/yii-helpers-basestringhelper#startsWith()-detail|Yii]], [[https://fuelphp.com/docs/classes/str.html#/method_starts_with|FuelPHP]], and [[https://docs.phalcon.io/3.4/en/api/phalcon_text|Phalcon]]. Please note, the links are for ''str_starts_with'' functionality, but they all also contain ''str_ends_with'' functionality. 

Checking the start and end of strings is a very common task which should be easy. Accomplishing this task is not easy now and that is why many frameworks have chosen to include it. This is also why other programming languages, as diverse as JavaScript, Java, Haskell, and Matlab, have also implemented this functionality. Checking the start and end of a string should not be a task which requires pulling in a PHP framework or developing a potentially suboptimal function in userland. 

===== Proposal =====
Add two new basic functions: ''str_starts_with'' and ''str_ends_with'':

<PHP>
str_starts_with ( string $haystack , string $needle ) : bool
str_ends_with ( string $haystack , string $needle ) : bool
</PHP>
  
''str_starts_with()'' checks if ''$haystack'' begins with ''$needle''. If ''$needle'' is longer than ''$haystack'', it returns ''false''; else, it compares each character in ''$needle'' with the corresponding character in ''$haystack'' (aligning both strings at their start), returning ''false'' if it encounters a mismatch, and ''true'' otherwise.\\
''str_ends_with()'' does the same thing but aligning both strings at their end.

Examples below:

<PHP>
$str = "beginningMiddleEnd";
if (str_starts_with($str, "beg")) echo "printed\n";
if (str_starts_with($str, "Beg")) echo "not printed\n";
if (str_ends_with($str, "End")) echo "printed\n";
if (str_ends_with($str, "end")) echo "not printed\n";

// empty strings:
if (str_starts_with("a", "")) echo "printed\n";
if (str_starts_with("", "")) echo "printed\n";
if (str_starts_with("", "a")) echo "not printed\n";
if (str_ends_with("a", "")) echo "printed\n";
if (str_ends_with("", "")) echo "printed\n";
if (str_ends_with("", "a")) echo "not printed\n";
 </PHP>

Please note, the behavior concerning empty strings is in accordance with the behavior of the accepted [[rfc:str_contains|str_contains RFC]]. This behavior is also the same as is common with other languages, including Java and Python.

===== Case-insensitivity and multibyte strings =====
Previously I raised an RFC, here, proposing not just the addition of str_starts_with and str_ends_with, but also case-insensitive and multi-byte versions. On the vote for whether to add str_starts_with, str_starts_with_ci, str_ends_with, and str_ends_with_ci to PHP 7.4“, 27 people voted “Yes” and 20 voted “No.” Several "no" voters indicated that the reason they voted against the RFC was the inclusion of the case-insensitive versions. There were concerns over the need for the case-sensitive versions as well as their naming.

Further, a separate vote on the inclusion of multibyte versions of the functions carried 4 "Yes" votes compared to 37 "No" votes.

In keeping with the precedent of the str_contains RFC on the matter, [[rfc:str_contains#case-insensitivity_and_multibyte_strings|here]], it is proposed that only the simple functions of ''str_starts_with'' and ''str_ends_with'' be included at this time. Further case-insensitive or multibyte versions would be a future consideration.

===== Backward Incompatible Changes =====
This could break functions existing in userland with the same names. But see [[rfc:str_contains#backward_incompatible_changes|the corresponding section in the str_contains RFC]] for a discussion illustrating how this concern may be mitigated and why this concern does not justify the rejection of this RFC.

===== Proposed PHP Version(s) =====
PHP 8

===== RFC Impact =====
  * **To SAPIs:** Will add the aforementioned functions to all PHP environments.
  * **To Existing Extensions:** None.
  * **To Opcache:** No effect.
  * **New Constants:** No new constants.
  * **php.ini Defaults:** No changed php.ini settings.

===== Patches and Tests =====
  * https://github.com/php/php-src/pull/5300

===== Implementation =====
After the project is implemented, this section should contain 
  - the version(s) it was merged to
  - a link to the git commit(s)
  - a link to the PHP manual entry for the feature

===== References =====

  * Implementation of similar methods/functions in other languages:
    * JavaScript: [[https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/startsWith|String#startsWith()]] and [[https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/endsWith|String#endsWith()]]
    * Python: [[https://docs.python.org/3/library/stdtypes.html#str.startswith|str#startswith()]] and [[https://docs.python.org/3/library/stdtypes.html#str.endswith|str#endswith()]]
    * Java: [[https://docs.oracle.com/javase/7/docs/api/java/lang/String.html#startsWith(java.lang.String)|String#startsWith()]] and [[https://docs.oracle.com/javase/7/docs/api/java/lang/String.html#endsWith(java.lang.String)|String#endsWith()]] (and Apache Commons Lang [[https://commons.apache.org/proper/commons-lang/apidocs/org/apache/commons/lang3/StringUtils.html#startsWith-java.lang.CharSequence-java.lang.CharSequence-|StringUtils.startsWith()]] and [[https://commons.apache.org/proper/commons-lang/apidocs/org/apache/commons/lang3/StringUtils.html#endsWith-java.lang.CharSequence-java.lang.CharSequence-|StringUtils.endsWith()]])
    * Ruby: [[http://ruby-doc.org/core-2.1.1/String.html#method-i-start_with-3F|String#start_with?()]] and [[http://ruby-doc.org/core-2.1.1/String.html#method-i-end_with-3F|String#end_with?()]]
    * Go: [[https://golang.org/pkg/strings/#HasPrefix|strings.HasPrefix()]] and [[https://golang.org/pkg/strings/#HasSuffix|strings.HasSuffix()]]
    * Haskell: [[https://hackage.haskell.org/package/MissingH-1.4.0.1/docs/Data-String-Utils.html#v:startswith|Data.String.Utils.startswith]] and [[https://hackage.haskell.org/package/MissingH-1.4.0.1/docs/Data-String-Utils.html#v:endswith|Data.String.Utils.endswith]] (aliases of [[https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-List.html#v:isPrefixOf|Data.List.isPrefixOf]] and [[https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-List.html#v:isSuffixOf|Data.List.isSuffixOf]])
    * MATLAB: [[https://www.mathworks.com/help/matlab/ref/startswith.html|startsWith()]] and [[https://www.mathworks.com/help/matlab/ref/endswith.html|endsWith()]]
  * PHP feature request: [[bugid@50434]] (and duplicates: [[bugid@60630]], [[bugid@67035]], [[bugid@74449]])
  * Accepted RFC for related function: [[rfc:str_contains|PHP RFC: str_contains]]
  * Rejected Prior RFC: [[rfc:add_str_begin_and_end_functions|PHP RFC: rfc:add_str_begin_and_end_functions]]

  * Discussion on the php.internals mailing list: [[https://externals.io/message/109318]]

===== Rejected Features =====
  * Case-insensitive and multibyte variants were included in the previous version of this RFC, which was declined. See also [[rfc:str_contains#case-insensitivity_and_multibyte_strings|the related section in the str_contains RFC]].