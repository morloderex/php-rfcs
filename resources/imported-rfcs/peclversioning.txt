===== Request for Comments: PECL Versioning =====

  * **Version:** 0.1
  * **Date:** 2008-03-21
  * **Author:** Steph Fox
  * **Status:** Under Discussion

Currently, PECL versioning is fairly anarchic. Looking into the problem of distributing PECL binaries, this is one of the first areas that could and should be addressed.

I would like to formally propose that all PECL modules:

  * **Declare** PHP_EXTNAME_VERSION in php_extname.h
  * **Use** PHP_EXTNAME_VERSION in both the zend_module_entry declaration and PHP_MINFO() (the phpinfo() source)
  * **Tag** the version with -dev at all times except during a package release
  * **Use** a recognized versioning structure (so that version_compare() can be useful and users can easily see which version they have). That is, x.x.x(-dev|-alpha|-beta|RC)
  * **Utilize** $Revision or $Id as well as the version number in PHP_MINFO()

There are currently 214 modules in PECL. Of these:

  * 1 is written in PHP
  * 3 are SAPIs
  * 2 are no longer hosted in PECL (and should be deleted)
  * 1 doesn't declare a zend_module_entry
  * 1 doesn't have versioning capability (pre-PHP 4.1?)
  * 1 was a CVS error (and should be deleted)
  * 1 is the timezone library for ext/date, and probably has non-standard versioning requirements

Of the remaining 204:

  * 13 already use PHP_EXTNAME_VERSION declared in php_extname.h, but don't use -dev
  * 25 already declare and use a versioning macro in php_extname.h, but the name could be anything
  * 27 already declare and use a versioning macro somewhere in the source
  * 3 do the whole thing in reverse and use the release version from package.xml
  * 136 either hard-code the version, use $Id alone, use $Revision alone or ignore the whole thing

I can easily make a patch for the 'low-hanging fruit' so long as there's consensus on this. The rest of PECL may be a slower process.

Thoughts/comments?