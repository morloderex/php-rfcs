====== PHP RFC: Native TLS ======
  * Version: 1.0
  * Date: 2014-11-19
  * Author: Anatol Belski, ab@php.net
  * Status: Draft /* (or Under Discussion or Accepted or Declined) */
  /* * First Published at: http://wiki.php.net/rfc/your_rfc_name */


===== Preface =====
This RFC bases on https://wiki.php.net/rfc/tls , however I don't mention it under the "First Published" position. While the key points are the same, the patch and the meaning undergone some changes. Still teh base RFC contains a lot of useful info about cross platform compatibility and various TLS implementations, so I would say it is useful to briefly read through it as well.

===== Introduction =====
Currently, to access module globals in TS mode, a global resource array is used. That array contains globals from all the threads and the right globals are identified by the thread key. In order to access the thread key, it is passed to each function requiring access to the globals. Or, it has to be fetched on demand. Consequently

  * many functions have to take an additional argument used only in TS mode, that makes code to be overloaded with TSRMLS_* macros
  * forgetting to declare/pass a TS parameter wouldn't do any harm in NTS mode (as those are all macros), but causes build breach in the TS
  * additionally it might introduce some C89 intompatibility in NTS mode when TSRMLS_FETCH() is used before var declarations
  * in some cases TS related code has to be explicitly conditioned with preprocessor directives (#ifdef ZTS)
  * when the thread id isn't passed directly, TSRMLS_FETCH() has to be used, which is slow

===== Proposal =====
The redundancy of passing thread id explicitly should be removed where possible. Ideally, one global thread specific variable should be used to hold the thread key (while it's not possible exactly the way on every platform, see the implementation details).

===== Backward Incompatible Changes =====
What breaks, and what is the justification for it?

===== Proposed PHP Version(s) =====
List the proposed PHP versions that the feature will be included in.  Use relative versions such as "next PHP 5.x" or "next PHP 5.x.y".

===== RFC Impact =====
==== To SAPIs ====
Describe the impact to CLI, Development web server, embedded PHP etc.

==== To Existing Extensions ====
Will existing extensions be affected?

==== To Opcache ====
It is necessary to develop RFC's with opcache in mind, since opcache is a core extension distributed with PHP.

Please explain how you have verified your RFC's compatibility with opcache.

==== New Constants ====
Describe any new constants so they can be accurately and comprehensively explained in the PHP documentation.

==== php.ini Defaults ====
If there are any php.ini settings then list:
  * hardcoded default values
  * php.ini-development values
  * php.ini-production values

===== Open Issues =====
Make sure there are no open issues when the vote starts!

===== Unaffected PHP Functionality =====
List existing areas/features of PHP that will not be changed by the RFC.

This helps avoid any ambiguity, shows that you have thought deeply about the RFC's impact, and helps reduces mail list noise.

===== Future Scope =====
This sections details areas where the feature might be improved in future, but that are not currently proposed in this RFC.

===== Proposed Voting Choices =====
Include these so readers know where you are heading and can discuss the proposed voting options.

State whether this project requires a 2/3 or 50%+1 majority (see [[voting]])

===== Patches and Tests =====
Links to any external patches and tests go here.

If there is no patch, make it clear who will create a patch, or whether a volunteer to help with implementation is needed.

Make it clear if the patch is intended to be the final patch, or is just a prototype.

===== Implementation =====
After the project is implemented, this section should contain 
  - the version(s) it was merged to
  - a link to the git commit(s)
  - a link to the PHP manual entry for the feature

===== References =====
Links to external references, discussions or RFCs

===== Rejected Features =====
Keep this updated with features that were discussed on the mail lists.