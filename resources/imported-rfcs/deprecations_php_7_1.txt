====== PHP RFC: Deprecations for PHP 7.1 ======
  * Date: 2015-12-28
  * Author: Nikita Popov <nikic@php.net>
  * Status: Draft

===== Introduction =====

This is a draft RFC for multiple deprecations targeting PHP 7.1. The RFC proposes to deprecate the listed functionality in PHP 7.1 and remove it no later than in PHP 8.0.

The following list provides a short overview of the functionality targeted for deprecation, while more detailed explanation is provided in the Proposal section:

  * ''%%__autoload%%''
  * ''$php_errormsg''

===== Proposal =====

==== __autoload ====

The magic [[http://php.net/__autoload|__autoload]] function has been superseded by [[http://php.net/spl_autoload_register|spl_autoload_register]] in PHP 5.1 and its use discouraged in the documentation. The primary advantage of ''spl_autoload_register'' is the ability to provide multiple chained autoloaders, thus easing library interoperability.

Proposed action: A deprecation notice if thrown when a global function with name ''__autoload'' is encountered during compilation. When this functionality is removed, the deprecation notice will be elevated to a compiler error.

==== $php_errormsg ====

The [[http://php.net/manual/en/reserved.variables.phperrormsg.php|$php_errormsg]] variable is created in the local scope whenever a non-fatal error is thrown, if the ''track_errors'' ini setting is enabled (disabled by default) and the error has not been consumed by an error handler.

Apart from being ini-dependent language behavior, this behavior is highly magic and the [[http://php.net/error_get_last|error_get_last]] function provides a cleaner way of retrieving the last error. Since PHP 7 additionally the [[http://php.net/manual/en/function.error-clear-last.php|error_clear_last]] function is available, thus covering the last possible use-cases for ''$php_errormsg'' without magic scope manipulation.

Proposed action: A deprecation notice is thrown if the ''track_errors'' ini setting is enabled. When this functionality is removed, a core error is thrown instead.

===== Backward Incompatible Changes =====

For PHP 7.1 additional deprecation notices will appear. For PHP 8.0 the previously deprecated functionality will no longer be available.

===== Proposed Voting Choices =====



===== Patches and Tests =====

