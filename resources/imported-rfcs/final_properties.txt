====== PHP RFC: Final properties ======
  * Version: 0.1
  * Date: 2020-02-18
  * Author: Máté Kocsis, <kocsismate@php.net>
  * Target Version: PHP 8.0
  * Status: Draft
  * Implementation: https://github.com/php/php-src/pull/5186

===== Introduction =====
This RFC proposes to add support for a new property modifier that would allow properties to be initialized, but not modified afterwards (including incrementing/decrementing, unsetting them). For example, Java and C# also have a similar - but not exactly the same - concept.

===== Proposal =====
"Final" properties in PHP (the actual keyword is to be decided) could be initialized either by an explicit default value, or by assigning a value to them. Unlike to ''final'' properties in Java, this RFC proposes to allow the initialization of object properties after object construction. The main purpose of this is to make lazy loading possible - which is an important aspect for many PHP applications. Additionally to object properties, class properties can also use the "final" modifier with the same restrictions.

As untyped properties have an implicit default value (''null'') in the absense of an explicit one, their usefulness would be very limited. In order to avoid the introduction for unintiutive workarounds, this RFC proposes to disable the "final" property modifier for them. Contrarily to untyped properties, typed properties are in uninitialized state by default, so they play well with the write-once semantics introduced by "final" properties. In order to be safe from problems with references, references on "final" properties are disabled as well.

===== Open questions =====
As there is no consensus about the name of the modifier, I'd like to put it to vote. You can find below the pros/cons for/against each of them that came up during discussion: (TBD)

  * ''immutable'':
  * ''final'':
  * ''locked'':
  * ''sealed'':
  * ''readonly'':
  * ''writeonce'':

===== Backward Incompatible Changes =====
There are no backward incompatible changes in this proposal except for the fact that "writeonce", "locked", "sealed", or "final" would become a reserved keyword depending on the outcome of the secondary vote.

===== Future Scope =====
Adding support for "final" properties would lay the groundwork for immutable objects - for which I'm going to create a proposal if the current RFC is accepted.

===== Proposed Voting Choices =====
The primary vote ("Do you want to add support for the new property modifier?") requires 2/3 majority, while the secondary one ("Which keyword to use"?) requires a simple majority.

===== References =====
Prior RFC proposing the introduction of ''immutable'' properties: https://wiki.php.net/rfc/immutability
