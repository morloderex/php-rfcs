====== Poll: Feasibility of P++ ======
  * Version: 0.2
  * Date: 2019-08-14
  * Author: Derick, derick@php.net
  * Auditor: Zeev, zeev@php.net
  * First Published at: http://wiki.php.net/rfc/p-plus-plus

===== Introduction =====


There are continuous arguments whether the PHP project <del>should do everything to preserve</del>//properly justify every backwards compatibility break//, as well as continue to add //new as well as change existing// features to make PHP a <del>more modern</del> //stricter language//<del>, with as an example enhanced stricter type-safety</del>.

Several suggestions have been made to address this perceived split. One of them is creating a newly branded "P++" to put <del>all the new </del> strictness-related features into <del>, and perhaps go the more "strict way"</del>, while continuing to maintain "PHP" <del>without making this original version change at all</del> //as dynamic as it is today//. As it takes time, attention, and resources, to see whether such a direction is feasible, it makes sense to find out whether the general internals community thinks it is a worthwhile endeavour.

===== Proposal =====
The proposal in this <del>RFC</del> //informal, non-binding vote// is a simple poll to see whether "P++" (supporting two distinct <del>languages</del> //dialects// with different dynamic vs. strict handling) //on top of a single, unified runtime// is a direction that people want to commit to spending the projectâ€™s time and energy to explore //at this time//.

===== Vote =====
<doodle title="Feasibility of P++" auth="derick" voteType="single" closed="false">
   * Yes
   * No
</doodle>
