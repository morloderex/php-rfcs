====== PHP RFC:  Ensure correct magic methods' signatures when typed ======
  * Version: 1.0
  * Date: 2020-04-05
  * Author: Gabriel Caruso (<carusogabriel@php.net>)
  * Status: Under Discussion
  * Target Version: PHP 8.0
  * Implementation: https://github.com/php/php-src/pull/4177

===== Introduction =====

This RFC is inspired by [[https://bugs.php.net/69718|a bug report]] that lists magic methods in PHP that do not have any checks at all to their signature when typed.

However, this implementation is not as simple as just check for the methods' signatures, as this is a Backward Incompatible Change for those who have incorrect signatures over their codebases.

Nowadays, PHP already checks the signature for the following methods:

  * clone return type: https://3v4l.org/Ub54p
  * construct return type: https://3v4l.org/CCL11
  * destruct return type: https://3v4l.org/HNkgW

===== Proposal =====

This RFC proposes to introduce the following signatures checks when magic methods are typed. 

**Important:** only, and only if, any of the listed magic methods use type hints and/or return types, these checks will be performed. In case they don't have types declared, nothing specific will happen.

The proposal follows the [[https://php.net/oop5.magic|Magic Methods documentation]].

<code php>
/** @return mixed */
Foo::__call(string $name, array $arguments);

/** @return mixed */
Foo::__callStatic(string $name, array $arguments);

Foo::__clone(): void;

/** @return mixed */
Foo::__get(string $name);

Foo::__isset(string $name): bool;

/** @param mixed $value */
Foo::__set(string $name, $value): void;

Foo::__unset(string $name): void;
</code>
  
===== Backward Incompatible Changes =====

An important note here is that if one of the listed magic methods is directly called, and it has the wrong signatures, the error will be thrown regardless.

For example https://3v4l.org/CuTNm, after this RFC, the errors about incorrect signatures will be thrown.

==== To Magic Methods without types declared ====

None.

==== To Magic Methods with the wrong signatures ====

Magic methods' signatures not matching the ones listed above, an error will be thrown, a //Fatal Error// more specific, following the errors of the same kind that are placed today.

===== Future Scope =====

This RFC only aims to add checks for the methods' signatures but as a Future Scope, a runtime check of what is been returning in the methods could be added, same as //%%__serialize%%// (https://3v4l.org/HLiTj) and //%%__toString%%// (https://3v4l.org/Dbe6G).

===== Proposed Voting Choices =====

Yes/No.