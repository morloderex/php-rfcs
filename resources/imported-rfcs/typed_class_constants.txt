====== PHP RFC: Typed class constants ======
  * Date: 2020-07-06
  * Author: Benas Seliuginas <benas.molis.iml@gmail.com>
  * Target version: PHP 8.1
  * Status: Draft

===== Introduction =====
TODO

===== Proposal =====
TODO

==== Supported types ====
Class constant type declarations support all type declarations supported by PHP, with the exception of ''void'', ''callable'', ''object'' and class names.

TODO

Meanwhile, ''void'' and ''callable'' types are not supported due to the same issues discussed in the [[https://wiki.php.net/rfc/typed_properties_v2#supported_types|typed properties v2 RFC]].

==== Inheritance and variance ====
Class constants are covariant.

TODO

==== Reflection ====
The ''ReflectionClassConstant'' class is extended by two methods:
<code php>
class ReflectionClassConstant implements Reflector {
	...

	public function getType(): ?ReflectionType {}
	public function hasType(): bool {}
}
</code>
''getType()'' returns a ''ReflectionType'' if the class constant has a type, and null otherwise.
''hasType()'' returns ''true'' if the class constant has a type, and false otherwise. The behavior matches that of ''getType()''/''hasType()'' for parameters/properties and ''getReturnType()''/''hasReturnType()'' for return types.

===== Backwards incompatible changes =====
None.

===== Impact on extensions =====
None.

To preserve backwards compatibility with extensions, a new function ''zend_declare_typed_class_constant()'' is introduced while keeping the original ''zend_declare_class_constant_ex()'' function intact.

===== Vote =====
2/3 majority Yes/No.

===== Implementation =====
[[https://github.com/php/php-src/pull/5815|GitHub Pull Request]]