====== PHP RFC: Add return type declarations for internal methods ======
  * Date: 2021-03-06
  * Author: Máté Kocsis <kocsismate@php.net>
  * Status: Draft
  * Implementation: https://github.com/php/php-src/pull/6548

===== Introduction =====

PHP 8.0 added parameter and return type declarations for the vast majority of functions and methods ([[https://github.com/php/php-src/pulls?q=is%3Apr+label%3AStubs+is%3Aclosed|Stubs initiative]]) because the different variance-related RFCs, as well as the  [[rfc:consistent_type_errors|PHP RFC: Consistent type errors for internal functions]], the [[rfc:union_types_v2|PHP RFC: Union Types 2.0]], and the [[rfc:mixed_type_v2|PHP RFC: Mixed Type v2]] RFCs made it possible to cover 99% of the cases. However, there are a few reasons why type information can be still missing:
  * **When a type includes resources:** it's not possible to declare types containing resources as there is no ''resource'' type declaration. However, resources are currently being phased out ([[https://github.com/php/php-tasks/issues/6|Resource to object migration]]), so there are less and less of such type declarations each day.
  * **When a function or method doesn't parse parameters according to the "standard" way:** This can be the case when e.g. an internal function or method doesn't respect the strict_types mode. PHP 8.0 fixed lots of such issues, but around 250 parameters are still not parsed correctly, due to various reasons. These could be fixed individually in the future.
  * **For ''out'' pass-by-ref parameters**: these parameter types are not validated during ZPP, thus it would be incorrect to declare any type for them. An in/out parameter RFC could fix this issue.
  * **For the return type of non-final methods**: According to the covariance rules, adding return types to overridden methods constitutes as a BC break due to the incompatible signature error doing so would result in. As all non-final internal methods are possibly overridden, the PHP project leaders decided not to cause such a big BC break just yet.

The current RFC aims to solve the last problem by providing a longer term, granular migration path for users to update their codebases with the necessary method return types.

===== Proposal =====

Internal method return types are added "tentatively" in PHP 8.1, and they will only become enforced in PHP 9.0. It means that in PHP 8.x versions, only a "strict standards" notice is raised during inheritance checks when an internal method is overridden in a way that the return types are incompatible, and only PHP 9.0 will makes these a fatal error.

An example for an overriding method which doesn't declare any return type (PHP 8.1):

<code php>
interface MyDateTime extends DateTime
{
    public function format(string $format);
}

// Strict standards: Declaration of MyDateTime::format(string $format) should be
// compatible with DateTime::format(string $format): string
</code>

An example for an overriding method which doesn't declare any return type (PHP 9.0):

<code php>
interface MyDateTimeInterface extends DateTimeInterface
{
    public function format(string $format);
}

// Fatal error: Declaration of MyDateTime::format(string $format) must be
// compatible with DateTime::format(string $format): string
</code>

An example for an overriding method which declares a wrong return type (PHP 8.1):

<code php>
interface MyDateTime extends DateTime
{
    public function format(string $format): ?string;
}

// Strict standards: Declaration of MyDateTime::format(string $format): ?string should be
// compatible with DateTime::format(string $format): string
</code>


An example for an overriding method which declares a wrong return type (PHP 9.0):

<code php>
interface MyDateTime extends DateTime
{
    public function format(string $format): ?string;
}

// Fatal error: Declaration of MyDateTime::format(string $format): ?string must be
// compatible with DateTime::format(string $format): string
</code>

===== Backward Incompatible Changes =====

In PHP 8.1, an E_STRICT notice would be raised for each method which has incompatible return type with its overridden internal method. In PHP 9.0, incompatible return types would always generate a fatal error.

===== Vote =====

Add return type declarations for internal methods? The vote requires 2/3 majority to be accepted.