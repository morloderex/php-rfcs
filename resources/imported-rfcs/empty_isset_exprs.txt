====== RFC: Allow arbitrary expression arguments to empty() and isset() ======
  * Date: 2012-04-12
  * Author: Nikita Popov <nikic@php.net>
  * Status: In voting phase
  * Original discussion: http://markmail.org/thread/gnci76ugtwda2t42 (Apr 10, 2012 3:53 pm)
  * RFC announcement: http://markmail.org/thread/ju2jyrenxkeddrnt (Apr 12, 2012 2:42 pm)

==== Summary ====
 
This RFC proposes to allow **arbitrary expressions** as arguments to ''empty()'' and ''isset()''.

==== What is the current behavior? ====

Currently ''empty()'' and ''isset()'' only accept variables as arguments. Thus it is possible to write ''empty($foo)'',
but it is not possible to write ''empty(foo())''.

Trying to do so results in this not pariculary helpful error message: "Can't use function return value in write context".

For other expressions (not variables and not function calls) a parse error is thrown.

==== Why was this behavior chosen in the past? ====

Using ''empty()'' and ''isset()'' on a non-variable was disallowed previously, as the main purpose of these language
constructs is to suppress an error message in case the passed variable does not exist.

As for function calls (and other expressions) it is already known that the value exists, using ''empty()''/''isset()'' is
not necessary and ''!func()''/''func() !== null'' can be used instead instead.

==== Why should we change the behavior? ====

Even though ''!func()'' and ''empty(func())'' would behave exactly the same, the latter is more readable in certain contexts.
For example if ''func()'' is expected to return an array, it feels more natural to verify it's emptiness using ''empty()'' instead
of ''!''.

Furthermore the current behavior often is unexpected to newbies. ''empty()'' and ''isset()'' look like functions, so programmers
new to PHP expect them to accept any value (in particular function call results).

==== Patch ====

The patch is available as a PR on Github: https://github.com/php/php-src/pull/54

==== Vote ====

<doodle 
title="Should empty() and isset() accept arbitrary arguments?" auth="nikic" voteType="single" closed="False">
   * yes
   * no
</doodle>