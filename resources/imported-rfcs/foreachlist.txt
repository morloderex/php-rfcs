====== RFC: foreach_variable supporting T_LIST ======
  * Version: 1.0
  * Date: 2011-07-06
  * Author: Xinchen Hui <laruence@php.net>
  * Status: Under Discussion
  * First Published at: http://wiki.php.net/rfc/foreachlist/

===== Introduction =====

T_LIST can not be used with foreach before.
<code php>
<?php
foreach (array(array(1, 2), array(3, 4)) as list($a, $b)) {
  /* won't work */
}
</code>

And there comes a feature request:  #10203 [[https://bugs.php.net/bug.php?id=10203|allow foreach($array as list($a,$b)]]

So I am working on a solution to proviode this feature

===== Proposal =====
1. ZEND_FE_FETCH
<code php>
<?php
foreach (array(array(24,2333), array(31,4666)) as list($a,$b)) {
    printf("a=>%s, b=>%s\n", $a, $b);
}
/** output:
a=>24, b=>2333
a=>31, b=>4666
*/
</code>

2. ZEND_FE_FETCH_WITH_KEY
<code php>
<?php
foreach (array(array(24,2333), array(31,4666)) as $k => list($a, $b)) {
    printf("key:%s, a=>%s, b=>%s\n", $k, $a, $b);
}
/** output:
key:0, a=>24, b=>2333
key:1, a=>31, b=>4666
*/
</code>
==== Opcodes ====
list.php
<code php>
<?php
foreach (array(array(24,2333), array(31,4666)) as list($a,$b)) {
    printf("a=>%s, b=>%s\n", $a, $b);
}
</code>

<code>
opcodes

   2     0  >   INIT_ARRAY                                       ~0      24
         1      ADD_ARRAY_ELEMENT                                ~0      2333
         2      INIT_ARRAY                                       ~1      ~0
         3      INIT_ARRAY                                       ~2      31
         4      ADD_ARRAY_ELEMENT                                ~2      4666
         5      ADD_ARRAY_ELEMENT                                ~1      ~2
         6    > FE_RESET                                         $3      ~1, ->18
         7  > > FE_FETCH                                         $4      $3, ->18
         8  >   ZEND_OP_DATA                                             
         9      FETCH_DIM_R                                      $5      $4, 1
        10      ASSIGN                                                   !1, $5
        11      FETCH_DIM_R                                      $7      $4, 0
        12      ASSIGN                                                   !0, $7
   3    13      SEND_VAL                                                 'a%3D%3E%25s%2C+b%3D%3E%25s%0A'
        14      SEND_VAR                                                 !0
        15      SEND_VAR                                                 !1
        16      DO_FCALL                                      3          'printf'
   4    17    > JMP                                                      ->7
        18  >   SWITCH_FREE                                              $3
  11    19    > RETURN                                                   1
</code>
===== More about RFC =====
In order to avoid the reduce/reduce conflict, I have to add the new bison rules to the existing "foreach_variable", which would otherwise bring a side-effect, that is :

considering this script:
<code php>
<?php
foreach (array(1,3,4) as &$key => $foo) {

}
</code>

before patched:
<code>
PHP Parse error:  syntax error, unexpected '&', expecting T_STRING or T_VARIABLE or '$' in /home/huixc/test.php on line 2
</code>

after patched:
<code>
PHP Fatal error:  Key element cannot be a reference in /home/huixc/test.php on line 2

Fatal error: Key element cannot be a reference in /home/huixc/test.php on line 2
</code>

about slience token '@',  is it neccessary to be supported :
<code php>
foreach (array(array(1,3,4), array(1, 2)) as @list($a, $b, $c)) {
}
</code>

if yes, the second patch in the following patchs list can be used.
===== Patchs =====
   * http://www.laruence.com/php-dev/php-5.4.0svn-add-foreach-list-support.patch
   * http://www.laruence.com/php-dev/php-5.4.0svn-add-foreach-list-with-slient-support.patch
===== Tests =====
   * http://www.laruence.com/php-dev/foreachList.001.phpt
   * http://www.laruence.com/php-dev/foreachList.002.phpt
===== Changelog =====
  * 2011-07-06 Xinchen Hui: Initial RFC creation
  * 2011-07-06 Xinchen Hui: Updated patch
  * 2011-07-06 Xinchen Hui: Added tests phpt
  * 2011-07-07 Xinchen Hui: Added supporting for slience token(@)
  * 2011-07-07 Xinchen Hui: Updated sencode patch