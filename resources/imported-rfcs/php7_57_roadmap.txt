====== PHP 7 and 5.7 roadmap ======
   * Version: 0.1
   * Date: 2014-08-15
   * Authors: Pierre Joye <pierre.php@gmail.com>, Andrea Faulds <ajf@ajf.me>
   * Status: Draft
   * First Published at: https://wiki.php.net/rfc/php7_57_roadmap

===== Introduction =====
Now that phpng has been merged to master, the way to php 7 is open. However there are many other points that need to be cleared before a final release can be done. Many feature developments have been suspended because of phpng, which was a moving target until now.

PHP major release is an unique opportunity to do a lot of things not possible in minor releases. Code cleanup, refactoring, adding new major features, etc. All these tasks cannot be done in minor releases and the work we do for a major release, and how we do it, define how PHP will look like for the next decade.

This is why it is critical, if not vital, to do not hurry up and be sure we do it right.


===== Proposal =====
As this time there are two positions about when we should try to release php 7 final:

   * within a year, no php 5.7
   * within 1.5 years, with 5.7

===== One and a half year development and no 5.7 =====

   * no risk to reproduce what happened with the php 6
   * Keep our limited resources on one release
   * There are enough new features in phpng to justify a major version
   * cleanups can be done later

PHP 6 was one of the biggest trauma in the php.net history. We have magisterially failed to define a clear roadmap, to find consensus on what it should be along many other issues like small groups fighting each other or hidden meetings or developments. 

Most of these issues have been solved or can be solved with the RFC process. However the increasing pressure on PHP from the various alternative implementations (hhvm on top) puts us in a difficult position, and we may better have to act quick to provide a better or similar alternative.

===== One and year development and 5.7 =====
   * Major versions are an unique opportunity to cleanup our code base
   * Major versions dictate what PHP will be in the next decade or more
   * It is unrealistic to consider than less than a year is enough to understand, stabilize and release a phpng based major version.
   * There are a couple of major features that are long due, RFCs are in progress (bigint, AST, other like getter/setter, unicode string class annotation may resurface)

The release process clearly defines how a release development phase should be done. Being strict allows us to actually release any version in time, as planed. A clear roadmap defining until when RFCs can be proposed, when they have to be implemented and merged, etc prevents any delay.

It is important to keep in mind that only 5.4 has managed to respect it. 5.5 suffers from the opcache introduction, delaying it by 3-4 months. And it was only a simple bundle. However its stability was far away from what was told, bringing any kind of surprises, some of them being still not solved. phpng is by far more complex and brings a lot of changes, many APIs changes in existing functions, most of them are hard to detect automatically.

There are also a couple of features (not twenty) that are long due. Some of them can only be done in a major version due to possible BC breaks or too large changes to be done in a minor version (argument used against the int64 patch in 5.x, f.e.).

===== Proposed PHP Version(s) =====
   * PHP 7
   * PHP 5.7

===== RFC Impact =====
No impact on existing extensions, code, etc. This is purely a planing RFC.


===== Open Issues =====
TBD


===== Proposed Voting Choices =====


<doodle title="Development period for php 7" auth="user" voteType="single" closed="true">
   * One year
   * One and a half year
</doodle>
\\
<doodle title="PHP 5.7 (as an exception to our release process)" auth="user" voteType="single" closed="true">
   * yes
   * no
</doodle>
\\
The RFC is considered approved with 50%+1 acceptance.

===== References =====
TBD

===== Rejected Features =====
TBD