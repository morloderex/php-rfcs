====== PHP RFC: Loosening heredoc/nowdoc scanner ======
  * Version: 0.9
  * Date: 2014-08-29
  * Author: Tjerk Meesters, datibbaw@php.net
  * Status: Draft
  * First Published at: http://wiki.php.net/rfc/heredoc-scanner-loosening


===== Introduction =====
Currently the rules for ending a heredoc or nowdoc are quite restrictive, requiring a newline after the closing identifier; this proposal aims to loosen or altogether remove that restriction.

===== Proposal =====
A fix for the following scenario:

<code php>
eval("return <<<EOS\nfoo\nEOS;");
</code>

//The above just illustrates the issue and doesn't advocate using eval().//

Allow more liberal use in array constructs:

<code php>
$strings = [<<<EOS
a
EOS, <<<EOS
b
EOS];
</code>

Or class constants:

<code php>
class Test
{
    const A = <<<EOS
ab
EOS . <<<EOS
cd
EOS;
}
</code>

Two ways in which this can be achieved are:

==== Loosened restrictions ====
Ends a quotation as soon as a newline is encountered as well as a few extra characters, i.e. a space, tab, period (concat), comma, ending square bracket (arrays) or null byte (end of file).

==== Removed restrictions ====
Ends a quotation as soon as the closing identifier is encountered.

===== Backward Incompatible Changes =====
Depending on whether we choose to loosen the restrictions (defined above) or completely remove it, the following behaviour will be changed:

==== Loosened restrictions ====
The following test code (taken from the aptly called "torture the T_END_HEREDOC rules) will not work as expected:

<code php>
print <<<ENDOFHEREDOC
ENDOFHEREDOC    ;
    ENDOFHEREDOC;
ENDOFHEREDOC   
    ENDOFHEREDOC
$ENDOFHEREDOC;

ENDOFHEREDOC;
</code>

It emits "ENDOFHEREDOC    ;\nENDOFHEREDOC;" and then stop scanning, leading to a parse error on the next line.

==== Removed restrictions ====
Removing the restrictions altogether will cause issues like this:

<code php>
$s = <<<EOS
Foo bar
EOSBLA
EOS;
</code>

It emits "Foo bar" and then stops scanning, leading to a parse error at "BLA".

===== Proposed PHP Version(s) =====
PHP 7

===== Unaffected PHP Functionality =====
It doesn't impact the rules that govern the contents inside the heredoc or nowdoc.

===== Proposed Voting Choices =====

Should the heredoc and nowdoc scanner be changed?

Voting choices will be:
- No, leave the scanner as it is.
- Yes, loosen the newline restriction with a selected set of characters.
- Yes, remove the newline restriction altogether.

This proposal requires a 2/3 majority as it affects the language. 

**Note:** Both "Yes" options count towards changing the current behaviour; if a single majority for  the last option can't be reached, the "loosened restrictions" will be applied.

===== Patches and Tests =====
The RFC author will provide the patches.
