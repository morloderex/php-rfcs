====== PHP RFC: Null Coalesce Operator ======
  * Version: 0.2
  * Date: 2014-09-06, last updates 2014-09-16
  * Author: Andrea Faulds, ajf@ajf.me
  * Status: Under Discussion
  * First Published at: http://wiki.php.net/rfc/isset_ternary


===== Introduction =====

PHP is a web-focussed programming language, so processing user data is a frequent activity. In such processing it is common to check for something's existence, and if it doesn't exist, use a default value. Yet the simplest way to do this, something along the lines of ''isset($_GET['mykey']) ? $_GET['mykey'] : ""'', is unnecessarily cumbersome. The short ternary operator, ''?:'' provides a way to do this much more conveniently: ''$_GET['mykey'] ? ""''. However, this is not good practise, as if the value does not exist it will raise an ''E_NOTICE''. Because of these issues, some sort of ifsetor() operator or a modification to ''?:'''s behaviour to make this common pattern easier has been a frequent request (See References).

===== Proposal =====

The coalesce, or ''??'', operator is added, which returns the result of its first operand if it exists and is not NULL, or else its second operand. This means the ''$_GET['mykey'] ?? ""'' is completely safe and will not raise an E_NOTICE. Some examples of its use:

<code php>
// Fetches the request parameter user and results in 'nobody' if it doesn't exist
$username = $_GET['user'] ?? 'nobody'; // equivalent to: $username = isset($_GET['user']) ? $_GET['user'] : 'nobody';

// Calls a hypothetical model-getting function, and uses the provided default if it fails
$model = Model::get($id) ?? $default_model; // equivalent to: if (($model = Model::get($id)) === NULL) { $model = $default_model; }

// Parse JSON image metadata, and if the width is missing, assume 100
$imageData = json_decode(file_get_contents('php://input'));
$width = $imageData['width'] ?? 100; // equivalent to: $width = isset($imageData['width']) ? $imageData['width'] : 100;
</code>

===== Proposed PHP Version(s) =====

This proposed for the next PHP x, which at the time of this writing would be PHP 7.


===== Proposed Voting Choices =====

As this is a language change, a 2/3 majority is required. A straight Yes/No vote would be held.

===== Patches and Tests =====

A pull request with a working implementation and test, targeting master, is here: https://github.com/php/php-src/pull/824

The original patch was graciously provided by Nikita Popov.

===== Implementation =====
After the project is implemented, this section should contain 
  - the version(s) it was merged to
  - a link to the git commit(s)
  - a link to the PHP manual entry for the feature

===== References =====

There have been several previous discussions and proposals about adding an ifsetor operator with similar behaviour, or changing the behaviour of ''?:'', indeed there has been at least one each year:

  * 2004: http://marc.info/?t=108214447100002&r=1&w=2 and http://marc.info/?t=108214551500002&r=1&w=2
  * 2005: http://marc.info/?t=111826997700001&r=1&w=2, http://marc.info/?t=111829868900001&r=1&w=2 and http://marc.info/?t=113069916200003&r=1&w=2
  * 2006: http://marc.info/?t=114669117400001&r=1&w=2
  * 2007: http://marc.info/?l=php-internals&m=118208519027980&w=2
  * 2008: [[rfc:ifsetor|RFC: ifsetor()]] - http://marc.info/?t=120136702900003&r=1&w=2
  * 2009: http://marc.info/?l=php-internals&m=124214617109310&w=2
  * 2011: http://marc.info/?l=php-internals&m=130158916712977&w=2
  * 2013: http://marc.info/?t=138547713500001&r=1&w=2

This list is quite probably incomplete.

===== Rejected Features =====
Keep this updated with features that were discussed on the mail lists.

===== Changelog =====

* v0.2 - Overhauled proposal, proposing new operator ''??'' instead of an extension to ''?:''
* v0.1 - Created