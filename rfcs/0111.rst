Indirect Method Call By Array Variable
======================================

:PHP-RFC: 0111
:Title: Indirect Method Call By Array Variable
:Author: Felipe Pena <felipe@php.net>
:Status: Implemented
:Type: Standards Track
:Created: 2011-06-05
:PHP-Version: 5.4
:Version: 1.0

Introduction
------------

Reading our bug tracker I noticed a good feature request
(http://bugs.php.net/bug.php?id=47160) from 2009 which points to an
interesting feature that I think makes sense for us, since we are now
working with $f() using objects and strings, and the array('class',
'method') is an old known for call_user_func()-like functions.

The array to be a valid callback should be a 2-element array, and it
must be for the first element object/string and for the second string
only. (just like our zend_is_callable() check and opcodes related to
init call)

Example
-------

.. code:: php

   <?php

   class Hello {
      public function world($x) {
         echo "Hello, $x\n"; return $this;
      }
   }


   $f = array('Hello','world');
   var_dump($f('you')); // Hello, you

   ?>

Checking for callback, nowadays already recognizes array('class',
'method') as valid callback, so it will facility the indirect call
through a variable:

.. code:: php

   <?php


   class Hello {
      static public function world($x) {
        echo "Hello, $x\n";
      }
   }


   function hello_world($x) {
      echo "Hello, $x\n";
   }


   $callbacks = array(
      array('Hello', 'world'),
      function ($x) { echo "Hello, $x\n"; },
      'hello_world'
   );


   foreach ($callbacks as $k => $callback) {
      if (is_callable($callback)) {
        $callback($k);
      }
   }

   ?>

Output:

::

   Hello, 0
   Hello, 1
   Hello, 2

Patch
-----

#.  http://felipe.ath.cx/diff/fr47160.diff

Additional Metadata
-------------------

:Original Authors: Felipe Pena felipe@php.net
:Published In Internals: http://markmail.org/thread/apqqa5lkuuedbbjf
:Slug: indirect-method-call-by-array-var
:Wiki URL: https://wiki.php.net/rfc/indirect-method-call-by-array-var
