Constant Scalar Expressions (re-opening)
========================================

:PHP-RFC: 0221
:Title: Constant Scalar Expressions (re-opening)
:Author: Andrea Faulds <ajf@ajf.me>, copied from the withdrawn RFC by Anthony Ferrara <ircmaxell@php.net>
:Status: Withdrawn
:Type: Unknown
:Created: 2013-08-13
:Version: 1.0

Introduction
------------

Sadly, Anthony Ferrara decided to stop developing PHP and withdrew all
of his RFCs. Since I liked this one, I am re-opening it here. The
original RFC was at https://wiki.php.net/rfc/const_scalar_expressions2.
I am enormously indebted to him for this, as he designed and implemented
the entire thing, and I am merely responsible for trying to push it
through the RFC process now that he has left.

This RFC brings static scalar expressions to the parser. This allows
places that only take static values (const declarations, property
declarations, function arguments, etc) to also be able to take static
expressions.

This can allow for writing far easier to understand code, by allowing
for far more expressive code.

Proposal
--------

Adding parser support for compile-time resolved scalar expressions.

Supported Operations
~~~~~~~~~~~~~~~~~~~~

The following operations are currently supported by this proposal:

-  *+* - Addition
-  *-* - Subtraction
-  *\** - Multiplication
-  ///// - Division
-  *%* - Modulus
-  *!* - Boolean Negation
-  *~* - Bitwise Negation
-  *\|* - Bitwise OR
-  *&* - Bitwise AND
-  *^* - Bitwise XOR
-  *<<* - Bitwise Shift Left
-  *>>* - Bitwise Shift Right
-  *.* - Concat

Also supported is grouping static operations: *(1 + 2) + 3*.

Supported Operands
~~~~~~~~~~~~~~~~~~

-  *123* - Integers
-  *123.456* - Floats
-  *"foo"* - Strings
-  *\__LINE_\_* - Line magic constant
-  *\__FILE_\_* - File magic constant
-  *\__DIR_\_* - Directory magic constant
-  *\__TRAIT_\_* - Trait magic constant
-  *\__METHOD_\_* - Method magic constant
-  *\__FUNCTION_\_* - Function magic constant
-  *\__NAMESPACE_\_* - Namespace magic constant
-  *<<<HEREDOC* - HEREDOC string syntax

Constant Declarations
~~~~~~~~~~~~~~~~~~~~~

.. code:: php

   <?php
   const FOO = 1 + 1;
   const BAR = 1 << 1;
   const BAZ = "HELLO " . "WORLD!";
   ?>

Note that constants are not supported within a declaration (since this
happens at compile time). So *const BIZ = FOO << BAR;* would be a
compile error.

Class Constant Declarations
~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. code:: php

   <?php
   class Foo {
       const FOO = 1 + 1;
       const BAR = 1 << 1;
       const BAZ = "HELLO " . "WORLD!";
   }
   ?>

Class Property Declarations
~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. code:: php

   <?php
   class Foo {
       public $foo = 1 + 1;
       public $bar = [
           1 + 1,
           1 << 2,
           "foo " . 
               "bar"
       ];
       public $baseDir = __DIR__ . "/base";
   }
   ?>

Function Argument Declarations
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. code:: php

   <?php
   function foo($a = 1 + 1, $b = 2 << 3) {
   }
   ?>

Static Variable Declarations
~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. code:: php

   <?php
   function foo() {
       static $a = 1 + 1 
       static $b = [ 1 << 2 ];    
   }
   ?>

Backward Incompatible Changes
-----------------------------

None

Proposed PHP Version(s)
-----------------------

PHP 5.NEXT

SAPIs Impacted
--------------

None

Impact to Existing Extensions
-----------------------------

None

Impact to Opcode Caching
------------------------

None, as this is a pure compile-time construct, the generated op-array
is the same as if there was no expression (it's purely static).

New Constants
-------------

None

php.ini Defaults
----------------

None

Vote
----

Question: Merge into master?
~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Voting Choices
^^^^^^^^^^^^^^

-  Yes
-  No

[STRIKEOUT:Opened 1st November 2013, ends 8th November 2013.]

The above vote was cancelled due to bwoebi's intervention with his patch
to support constants within these expressions.

Patches and Tests
-----------------

An implementation based off of current master is available:
`Implementation On
GitHub <https://github.com/TazeTSchnitzel/php-src/tree/static_operation_parsing>`__
(`Diff On
GitHub <https://github.com/TazeTSchnitzel/php-src/compare/static_operation_parsing>`__)

This is, again, based off Anthony Ferrara's work:
https://github.com/ircmaxell/php-src/tree/static_operation_parsing

This patch is ready to be merged with tests.

Additional Metadata
-------------------

:Original Authors: Andrea Faulds ajf@ajf.me (copied from the withdrawn RFC by Anthony Ferrara ircmaxell@php.net)
:Original Date: 2013-10-18 (original's date was 2013-08-13)
:Original Status: Withdrawn due to improved proposal by bwoebi: `PHP RFC: Constant Scalar Expressions <https://wiki.php.net/rfc/const_scalar_exprs>`__
:Slug: const_scalar_expressions2
:Wiki URL: https://wiki.php.net/rfc/const_scalar_expressions2
