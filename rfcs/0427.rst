Array_key_(first|last|index)
============================

:PHP-RFC: 0427
:Title: Array_key_(first|last|index)
:Author: John Bafford
:Status: Withdrawn
:Type: Unknown
:Created: 2016-01-01
:Version: 1.0.1

Introduction
------------

Sometimes, it is necessary to retrieve the first or last key of an
array, but there is no convenient means of doing so currently provided
by the language without modifying the source array or resorting to
odd-to-read code. This RFC and its accompanying patch add the following
functions to assist with that task:

-  $key = array_key_first($array [, &$value])
-  $key = array_key_last($array [, &$value])
-  $key = array_key_index($array, $index [, &$value])

Proposal
--------

Arrays in php are ordered maps, but there is no convenient way to get
the first or last key of an array (a common function in some use cases),
or even an arbitrary key by index (a fairly rare need).

array_key_first() returns the first key in an array.

array_key_last() returns the last key in an array.

array_key_index() returns the key at a specified index (using a
substr-like offset; greater-than or equal to zero starts from the
beginning of the array; negative from the end).

.. code:: php

   $arr ['a' => 1, 'b' => 2, 'c' => 3, 'd' => 4];

   $key = array_key_first($arr); //$key === 'a'

   $key = array_key_last($arr, $val); //$key === 'd', $val === 4

   $key = array_key_index($arr, 1); //$key === 'b'
   $key = array_key_index($arr, -2); //$key === 'c'
   $key = array_key_index($arr, 5, $val); //$key === NULL, $val is unchanged


   // Also works for numeric arrays
   $numeric = [1 => 1, 5 => 2, 2 => 3];
   $key = array_key_index($numeric, 0); //$key === 1
   $key = array_key_index($numeric, 1); //$key === 5
   $key = array_key_index($numeric, 2); //$key === 2

All three functions return the requested array key, or null if the
requested array key is not found (an empty array, or an out-of-bounds
index in the case of array_key_index). For convenience, each function
also takes an optional $value parameter that, if provided and the
specified index is found, will be set to contain the value at the
specified index.

There are certain use-cases that require getting the first key of an
array (and to a much lesser extent, the last key, or an arbitrary key by
index order). There are three ways this could be done with existing php
functionality, all of which have significant drawbacks, in either
performance, legibility, or mutability:

-  array_keys($arr)[0]

   -  array_keys() is non-performant for this task. It requires the
      relatively expensive operation of iterating over an entire array
      and building a new array whose values are the keys of the
      original, when only one single key is needed. Additionally,
      bounds-checking must be done in php code.
   -  Retrieving the last key requires either of the more complicated
      constructs, array_keys(array_reverse($arr))[0]; or
      array_keys($arr)[count($arr) - 1]

-  foreach($arr as $key => $value) { break; }

   -  This is a confusing construct to read. An iteration over the array
      must be started, stopped after one element, and as a side-effect,
      $key contains the first key in the array after the loop is
      stopped. Also, an emptiness check on the array must occur, or,
      $key initialized prior to the loop to handle the empty array case.
   -  In PHP < 7, this also modifies the array by changing the array
      pointer.
   -  Retrieving the last key can be done by either of these more
      complicated/confusing constructs:

      -  foreach(array_reverse($arr) as $key => $value) { break; }
      -  foreach($arr as $key => $value); *Iterate over the entire
         array, doing nothing, just for the side-effect of $key still
         contains the last array key beyond the end of the loop.*

-  reset($arr); $key = key($arr);
-  end($arr); $key = key($arr);

   -  This modifies the array (resets the array pointer).

With the reference implementation provided in the patch referenced
below, array_key_first() and array_key_last() directly retrieve the
array key from the underlying hash (by setting a local hash pointer to
the start/end of the array and retrieving the key for that index). By
necessity, array_key_index() iterates through the keys, but does so in C
code, rather than in PHP code. array_key_first() and array_key_last()
are implemented in terms of array_key_index(); array_key_index() exists
a a consequence and extension of generalizing the common code between
array_key_first() and array_key_last().

array_key_first() and array_key_last() have O(1) time complexity.
array_key_index() (when not retrieving the first or last key) has O(N)
time complexity. array_key_index() is intended when only one key or
value from an array is needed; if repeated calls to array_key_index()
are needed for a particular array, it would likely be more performant to
just use array_keys() instead. (Iterating all keys of an array using
array_key_index() would be O(N^2).) As such, it's included for sake of
completeness, but would likely in practice see limited use.

Patches and Tests
-----------------

The GitHub Pull request for this change is here:
https://github.com/php/php-src/pull/347

This is a full and working implementation, and if accepted, could be
merged as-is. The PR includes tests covering all new functionality.

Backward Incompatible Changes
-----------------------------

None.

Proposed PHP Version(s)
-----------------------

Next PHP 7.x.

RFC Impact
----------

As this RFC only adds new functions, it should not cause any impact to
SAPIs, other extensions, or opcache.

Open Issues
-----------

\* Whether or not to include the corresponding array value as an
optional-return-by-reference parameter.

Proposed Voting Choices
-----------------------

-  Whether to accept the RFC for PHP 7.1.

This RFC does not add new syntax, so a 50%+1 majority is required to
pass.

Implementation
--------------

After the project is implemented, this section should contain

#. the version(s) it was merged to
#. a link to the git commit(s)
#. a link to the PHP manual entry for the feature

Additional Metadata
-------------------

:Original Authors: John Bafford
:Original Status: Under Discussion
:Slug: array_key_first_last_index
:Wiki URL: https://wiki.php.net/rfc/array_key_first_last_index
