Poll: Feasibility Of P++
========================

:PHP-RFC: 0664
:Title: Poll: Feasibility Of P++
:Author: Derick <derick@php.net>
:Status: Unknown
:Type: Informational
:Created: 2019-08-14
:Version: 0.2

Introduction
------------

There are continuous arguments whether the PHP project [STRIKEOUT:should
do everything to preserve]\ *properly justify every backwards
compatibility break*, as well as continue to add *new as well as change
existing* features to make PHP a [STRIKEOUT:more modern] *stricter
language*\ [STRIKEOUT:, with as an example enhanced stricter
type-safety].

Several suggestions have been made to address this perceived split. One
of them is creating a newly branded "P++" to put <del>all the new </del>
strictness-related features into [STRIKEOUT:, and perhaps go the more
"strict way"], while continuing to maintain "PHP" [STRIKEOUT:without
making this original version change at all] *as dynamic as it is today*.
As it takes time, attention, and resources, to see whether such a
direction is feasible, it makes sense to find out whether the general
internals community thinks it is a worthwhile endeavour.

Proposal
--------

The proposal in this [STRIKEOUT:RFC] *informal, non-binding vote* is a
simple poll to see whether "P++" (supporting two distinct
[STRIKEOUT:languages] *dialects* with different dynamic vs. strict
handling) *on top of a single, unified runtime* is a direction that
people want to commit to spending the projectâ€™s time and energy to
explore *at this time*.

Vote
----

Question: Feasibility of P++
~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Voting Choices
^^^^^^^^^^^^^^

-  Yes
-  No

Additional Metadata
-------------------

:Auditor: Zeev, zeev@php.net
:Original Authors: Derick, derick@php.net
:Slug: p-plus-plus
:Wiki URL: https://wiki.php.net/rfc/p-plus-plus
