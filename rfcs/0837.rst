Deprecations For PHP 8.4
========================

:PHP-RFC: 0837
:Title: Deprecations For PHP 8.4
:Author: Niels Dossche <nielsdos@php.net>, Gina Peter Banyard <girgias@php.net>, Máté Kocsis <kocsismate@php.net>
:Status: Draft
:Type: Unknown
:Created: 2023-07-25
:Version: 1.0

Introduction
------------

The RFC proposes to deprecate the listed functionality in PHP 8.4 and
remove it in PHP 9.

The following list provides a short overview of the functionality
targeted for deprecation, while more detailed explanation is provided in
the Proposal section:

-  ``DOMAttr::$schemaTypeInfo`` and ``DOMElement::$schemaTypeInfo``
-  Soft-deprecated ``DOMDocument`` and ``DOMEntity`` properties
-  ``DOMImplementation::getFeature($feature, $version)``
-  Constant ``DOM_PHP_ERR``
-  ``mysqli_ping()`` and ``mysqli::ping()``
-  ``unserialize()``'s 'S' tag
-  ``session.sid_length`` and ``session.sid_bits_per_character``
-  ``SplFixedArray::__wakeup()``
-  ``xml_set_object()`` and ``xml_set_*_handler()`` with string method
   names
-  Passing ``null`` and ``false`` to ``dba_key_split()``

Proposal
--------

Each feature proposed for deprecation is voted separately and requires a
2/3 majority. All votes refer to deprecation in PHP 8.4 and removal in
PHP 9.

DOMAttr::$schemaTypeInfo and DOMElement::$schemaTypeInfo
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Author: Niels Dossche nielsdos@php.net

schemaTypeInfo used to be a feature of DOM Core Level 3
https://www.w3.org/TR/2003/WD-DOM-Level-3-Core-20030226/DOM3-Core.html#core-Attr-schemaTypeInfo,
but it was never implemented in PHP, i.e. it always returns NULL. That
return value is not even correct, as schemaTypeInfo is not supposed to
be nullable. Furthermore, the feature has been removed from the current
living DOM spec. It doesn't make sense to keep a feature alive that has
never been implemented and is removed by the reference specification.

TODO: check impact

Question: Deprecate DOMAttr::$schemaTypeInfo and DOMElement::$schemaTypeInfo
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Voting Choices
^^^^^^^^^^^^^^

-  Yes
-  No

Soft-deprecated DOMDocument and DOMEntity properties
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

The following properties have already been soft-deprecated for a long
time:

-  ``DOMDocument::$actualEncoding``: it is just an alias to
   ``DOMDocument::$encoding``
-  ``DOMDocument::$config``: it has always returned null
-  ``DOMEntity::$actualEncoding``: it has always returned null
-  ``DOMEntity::$encoding``: it has always returned null
-  ``DOMEntity::$version``: it has always returned null

Question: Deprecate and remove the aforementioned DOMDocument and DOMEntity properties?
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. _voting-choices-1:

Voting Choices
^^^^^^^^^^^^^^

-  Yes
-  No

DOMImplementation::getFeature($feature, $version)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Author: Niels Dossche nielsdos@php.net

``DOMImplementation::getFeature($feature, $version)`` used to be a
feature of DOM Core Level 3
https://www.w3.org/TR/2003/WD-DOM-Level-3-Core-20030226/DOM3-Core.html#core-DOMImplementation3-getFeature,
but it was never implemented in PHP, i.e. it always threw a "not
implemented" exception. It was also never documented because of this.
Furthermore, the feature has been removed from the current living DOM
spec. It doesn't make sense to keep a feature alive that has never been
implemented and is removed by the reference specification.

Question: Deprecate DOMImplementation::getFeature($feature, $version)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. _voting-choices-2:

Voting Choices
^^^^^^^^^^^^^^

-  Yes
-  No

Constant DOM_PHP_ERR
~~~~~~~~~~~~~~~~~~~~

TODO: See reasoning:
https://github.com/php/php-src/pull/11927#issuecomment-1672129591

mysqli_ping() and mysqli::ping()
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

TODO: See reasoning:
https://github.com/php/php-src/pull/11912#issuecomment-1671762583

unserialize()'s 'S' tag
~~~~~~~~~~~~~~~~~~~~~~~

Author: Tim Düsterhus timwolla@php.net

TODO: https://github.com/php/php-src/pull/12309

session.sid_length and session.sid_bits_per_character
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

TODO:
https://github.com/php/php-src/issues/12418#issuecomment-1763034403

Deprecate SplFixedArray::__wakeup()
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

TODO: https://github.com/php/php-src/pull/9704

xml_set_object() and xml_set_*_handler() with string method names
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Author: Gina Peter Banyard girgias@php.net

The XML extension allows registering callbacks that are invoked when
encountering certain XML triggers, such as the start of a new element or
a processing instruction, via the relevant ``xml_set_*_handler()``
function.

However, these functions also allow setting a method name, as a string,
that should be called on the object provided via ``xml_set_object()``.
This behaviour is very strange and seems to date prior to the
introduction of proper callables for object methods via the
``[$objInstance, 'methodName']`` syntax.

The proposal is to deprecate the ``xml_set_object()`` function and
passing non-callable strings to the ``xml_set_*_handler()`` functions.
This would also mean to unset a handler the value of ``null`` must be
used instead of an empty string witch is also currently allowed.

Question: Deprecate xml_set_object() and xml_set_*_handler() with string method names
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. _voting-choices-3:

Voting Choices
^^^^^^^^^^^^^^

-  Yes
-  No

Deprecate passing null and false to dba_key_split()
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Author: Gina Peter Banyard girgias@php.net

The signature of ``dba_key_split()`` is currently
``function dba_key_split(string|false|null $key): array|false {}``.

However, passing ``null`` or ``false`` to this function will make it
immediately return ``false``, this is the case since at least PHP 5.3,
probably earlier.

Moreover, since PHP 8.0, this is the only way for this function to
return ``false``.

The proposal is to deprecate passing ``null`` and ``false`` to the
``$key`` parameter, which will allow to clean up the return type of this
function in the next major version to just ``array``.

Question: Deprecate passing null and false to dba_key_split()
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. _voting-choices-4:

Voting Choices
^^^^^^^^^^^^^^

-  Yes
-  No

Backward Incompatible Changes
-----------------------------

For PHP 8.4 additional deprecation notices will be emitted. The actual
removal of the affected functionality will happen no earlier than PHP 9.

Additional Metadata
-------------------

:Implementation: TBD
:Original Authors: Niels Dossche nielsdos@php.net, Gina Peter Banyard girgias@php.net, Máté Kocsis kocsismate@php.net
:Slug: deprecations_php_8_4
:Wiki URL: https://wiki.php.net/rfc/deprecations_php_8_4
