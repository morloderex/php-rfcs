Implement Missing SQLite Feature "openBlob" In PDO
==================================================

:PHP-RFC: 0580
:Title: Implement Missing SQLite Feature "openBlob" In PDO
:Author: bohwaz
:Status: Declined
:Type: Unknown
:Created: 2017-09-19
:Version: 0.1

Introduction
------------

The "SQLite" driver of PDO is missing some features provided by the
"SQLite3" extension, namely "openBlob" which allows to access a stored
blob as a stream/file pointer.

Proposal
--------

As discussed on `internals <https://externals.io/message/100268>`__ the
SQLite driver of PDO is missing some features that are present in the
SQLite3 extension.

One of those features has already been proposed and merged: `Add support
for SQLite open flags <https://github.com/php/php-src/pull/2734>`__.

A second one has been proposed and is awaiting merging: `Implement
sqlite_stmt_readonly in
PDO <https://github.com/php/php-src/pull/2760>`__

But we are still missing this feature:
`SQLite3::openBlob <https://secure.php.net/manual/en/sqlite3.openblob.php>`__:
opening blobs for reading and writing as streams.

This would be implemented following the current practice of adding a
driver-specific method:

``PDO::sqliteOpenBlob(string $table , string $column , int $rowid [, string $dbname = "main" [, int $flags = PDO::SQLITE_OPEN_READONLY ]] )``

This would return a resource file pointer. This would match exactly the
behaviour of
`SQLite3::openBlob <https://secure.php.net/manual/en/sqlite3.openblob.php>`__.

This is following what already exists in PDO, examples:

-  Creating a LOB (Large Object) in PostgreSQL:
   `PDO::pgsqlLOBCreate <https://secure.php.net/manual/en/pdo.pgsqllobcreate.php>`__
-  Creating a function in SQLite:
   `PDO::sqliteCreateFunction <https://secure.php.net/manual/en/pdo.sqlitecreatefunction.php>`__

These driver-specific methods are only defined when instantiating PDO
with the right driver, trying to call them with another driver results
in an error due to calling an undefined method.

Why not just use PDO LOBs support via PDO::bindColumn and PDO::bindParam?
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

For reference: http://www.php.net/manual/en/pdo.lobs.php

As this was discussed on internals, the PDO LOB support is for accessing
LOB using SQL queries, *openBlob* is for accessing LOBs directly. This
is a very fast and efficient way of using SQLite as a blob store, which
can't be done if going through SQL queries as traditional PDO::PARAM_LOB
support is doing. Furthermore, *openBlob* allows to both read and write
in a blob at the same time. And finally the current code handling LOBs
in PDO via bindParam and bindColumn is broken, it is returning a string
(with MySQL and SQLite, but not PostgreSQL) instead of a resource file
pointer. I will try to spend time fixing that in the coming months.

In conclusion this new method and the existing PDO LOB support provide
different features for different needs, and both are useful.

Backward Incompatible Changes
-----------------------------

None.

Proposed PHP Version(s)
-----------------------

PHP 7.3

RFC Impact
----------

To SAPIs
~~~~~~~~

None.

To Existing Extensions
~~~~~~~~~~~~~~~~~~~~~~

None.

To Opcache
~~~~~~~~~~

None.

New Constants
~~~~~~~~~~~~~

None.

php.ini Defaults
~~~~~~~~~~~~~~~~

None.

Open Issues
-----------

None so far.

Unaffected PHP Functionality
----------------------------

Nothing else is affected.

Future Scope
------------

Any proposal to review and change current style and behaviour of
driver-specific methods in PDO. This is out of the scope of this
proposal.

Proposed Voting Choices
-----------------------

This proposal requires a 50%+1 majority. Vote closing on Oct 27, 2017.

Question: Implement sqliteOpenBlob in PDO?
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Voting Choices
^^^^^^^^^^^^^^

-  Yes
-  No

Patches and Tests
-----------------

Patch: https://github.com/php/php-src/pull/2698

Implementation
--------------

After the project is implemented, this section should contain

#. the version(s) it was merged to
#. a link to the git commit(s)
#. a link to the PHP manual entry for the feature
#. a link to the language specification section (if any)

References
----------

-  `Internals RFC discussion <https://externals.io/message/100773>`__
-  `Internals original
   discussion <https://externals.io/message/100268>`__

Rejected Features
-----------------

Keep this updated with features that were discussed on the mail lists.

Additional Metadata
-------------------

:Original Authors: bohwaz
:Slug: implement_sqlite_openblob_in_pdo
:Wiki URL: https://wiki.php.net/rfc/implement_sqlite_openblob_in_pdo
