Explicit Octal Integer Literal Notation
=======================================

:PHP-RFC: 0762
:Title: Explicit Octal Integer Literal Notation
:Author: George Peter Banyard <girgias@php.net>
:Status: Implemented
:Type: Standards Track
:Created: 2020-10-20
:PHP-Version: 8.1
:Version: 1.0

Introduction
------------

PHP's literal octal notation can lead to some confusing results such as
``16 === 016`` evaluating to false. This is because ``016`` is evaluated
as an octal integer and resolves to ``14``.

This convention for octal integers is well established and followed by
many programming languages (Java, C, C#, Golang, Haskell, and more).
However, Python, JavaScript, and Rust
`[1 <https://docs.python.org/3/reference/lexical_analysis.html#integer-literals>`__]\ `[2 <https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Numbers_and_dates>`__]\ `[3 <https://doc.rust-lang.org/rust-by-example/primitives/literals.html>`__]
only accept or support an explicit octal notation ``0o``.

Surprisingly PHP already has support for this notation when using the
``octdec()`` and ``base_convert()`` functions.

Proposal
--------

Add support for the explicit octal notation ``0o``/``0O`` for integer
literals analogous to ``0x``/``0X`` and ``0b``/``0B`` for hexadecimal
and binary.

.. code:: php

   0o16 === 14; // true
   0o123 === 83; // true

   0O16 === 14; // true
   0O123 === 83; // true

   016 === 0o16; // true
   016 === 0O16; // true

Behaviour of numeric strings
----------------------------

As of PHP 7.0, hexadecimal numbers in strings are not considered numeric
`[4 </rfc/remove_hex_support_in_numeric_strings>`__], as the behaviour
was inconsistent with type casting. Adding complete support for hex
numbers in strings was rejected because adding it for other numeric
types would be complex and confusing. In particular:

    supporting octal numbers is not possible, because handling the
    string '0123' as the number 83 would be highly unexpected for end
    users of an application.

Numeric strings in PHP are *always* decimal. Analogous to the example
from the introduction ``"016" == 016`` evaluates to false as
``(int) "016"`` evaluates to ``16``.

This RFC has no impact on the behaviour of numeric strings. ``"0o16"``
would still be interpreted as a string and only a string. Moreover,
``(int) "0o16"`` will continue to evaluate to ``0``.

Backward Incompatible Changes
-----------------------------

None

Proposed PHP Version(s)
-----------------------

PHP 8.1.

RFC Impact
----------

To Existing Extensions
~~~~~~~~~~~~~~~~~~~~~~

Added support to the GMP extension.

Added support to the ``FILTER_VALIDATE_INT`` filter when using the
``FILTER_FLAG_ALLOW_OCTAL`` flag

To Opcache
~~~~~~~~~~

None

Unaffected PHP Functionality
----------------------------

Implicit octal notation is unaffected.

Future Scope
------------

-  Deprecate the implicit octal notation.
-  Support hexadecimal, octal, and binary numbers in strings
-  Add a flag for the ``FILTER_VALIDATE_INT`` filter to only allow
   octals with the explicit octal notation.

Voting Choices
--------------

Per the Voting RFC, there is a single Yes/No vote requiring a 2/3
majority for this proposal to be accepted.

Question: Add support for explicit octal notation
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. _voting-choices-1:

Voting Choices
^^^^^^^^^^^^^^

-  Yes
-  No

Patches and Tests
-----------------

GitHub patch: https://github.com/php/php-src/pull/6360

Language specification patch TBD.

Implementation
--------------

After the project is implemented, this section should contain

#. the version(s) it was merged into
#. a link to the git commit(s)
#. a link to the PHP manual entry for the feature
#. a link to the language specification section (if any)

References
----------

| `[1 <https://docs.python.org/3/reference/lexical_analysis.html#integer-literals>`__]
  Python language reference about integer literals
| `[2 <https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Numbers_and_dates>`__]
  JavaScript language references about numbers
| `[3 <https://doc.rust-lang.org/rust-by-example/primitives/literals.html>`__]
  Rust language reference about literals
| `[4 </rfc/remove_hex_support_in_numeric_strings>`__] PHP RFC: Remove
  hex support in numeric strings

Additional Metadata
-------------------

:Original Authors: George Peter Banyard, girgias@php.net
:Original Status: Accepted
:Slug: explicit_octal_notation
:Wiki URL: https://wiki.php.net/rfc/explicit_octal_notation
