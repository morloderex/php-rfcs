?= (check And Set) Operator
===========================

:PHP-RFC: 0608
:Title: ?= (check And Set) Operator
:Author: Jefersson Nathan <malukenho@php.net>
:Status: Draft
:Type: Unknown
:Created: 2018-07-06
:Version: 0.1

Introduction
------------

Combined assignment operators have been around since 1970's, appearing
first in the C Programming Language. For example, \`$x = $x + 3\` can be
shortened to \`$x += 3`.

With PHP being a web focused language, the \`?:\` operator is often used
to check something's existence like \`$this->obj = $obj ?: new
\\stdClass;\` However, because variable names are often much longer than
\`$username`, the use of \`?:\` for self assignment creates repeated
code, like:

.. code:: php

    $this->requestDataFomUserWasFound = $this->requestDataFomUserWasFound ?: 'value';

It is also intuitive to use combined assignment operator null coalesce
checking for self assignment.

# Proposal

Despite \`?:\` operator being a comparison operator, coalesce equal or
\`?=\` operator is an assignment operator. If the left parameter is
null, assigns the value of the right paramater to the left one. If the
value is not null, nothing is made.

.. code:: php

   // The folloving lines are doing the same
   $this->requestDataFromUserWasFound = $this->requestDataFromUserWasFound ?: 'value';

   // Instead of repeating variables with long names, the equal check and set operator is used
   $this->requestDataFromUserWasFound ?= 'value';

The value of right-hand parameter is copied if the left-hand parameter
is null-like.

Proposed PHP Version(s)
-----------------------

This proposed for the next PHP 7.x.

Patches and Tests
-----------------

A pull request with a working implementation is on the way.

References
----------

Inspired by: https://wiki.php.net/rfc/null_coalesce_equal_operator

Additional Metadata
-------------------

:Original Authors: Jefersson Nathan, malukenho@php.net
:Slug: check_and_set
:Wiki URL: https://wiki.php.net/rfc/check_and_set
