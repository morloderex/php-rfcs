Asynchronous Signal Handling (without TICKs)
============================================

:PHP-RFC: 0494
:Title: Asynchronous Signal Handling (without TICKs)
:Author: Dmitry Stogov <dmitry@zend.com>
:Status: Implemented
:Type: Standards Track
:Created: 2016-06-24
:PHP-Version: 7.1
:Version: 0.9

Introduction
------------

Currently php may handle OS signals using ``pcntl`` extensions:

-  synchronously, calling ``pcntl_signal_dispatch()`` manually
-  asynchronously, compiling scripts with ``declare(ticks=1)``

However, TICKs introduce huge overhead.

Proposal
--------

Zend Engine in PHP 7.1 was extended with ability of safe time-out and
interrupt handling. Actually, PHP VM checks for EG(vm_interrupt) flag on
each loop iteration, user function entry or internal function exit, and
call callback function if necessary.

I propose to use this ability to implement asynchronous signal handling.
Registered signal handlers are going to be called at some points during
user script execution without any overhead.

To keep ability of synchronous signal, handling we had to introduce a
new INI directive ``pcntl.async_signals`` with default value 0. Bob
pointed, that instead of INI directive, we may use function
``pcntl_async_signals(bool on_off)``. In my opinion, this doesn't make a
big difference. In first case, some PHP script may don't know the value
set through php.ini. In the second, it may don't know the previous value
set through ``pcntl_async_signals()``.

Backward Incompatible Changes
-----------------------------

None

Proposed PHP Version(s)
-----------------------

PHP 7.1

RFC Impact
----------

php.ini Defaults
~~~~~~~~~~~~~~~~

-  pcntl.async_signals=0, it's value may be changed at run-time through
   ini_set().

Future Scope
------------

In the next major PHP version we may remove ability of manual signal
handling and corresponding ``pcntl.async_signals`` INI directive or
``pcntl_async_signals()`` function.

Proposed Voting Choices
-----------------------

The vote is a straight Yes/No vote, that requires a 2/3 majority. The
vote began on June 28 and will finish on July 6.

Question: Asynchronous Signal Handling
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Voting Choices
^^^^^^^^^^^^^^

-  Yes
-  No

An additional 1/2 majority question:

Question: Chose between old and new behavior in PHP 7.\* using
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. _voting-choices-1:

Voting Choices
^^^^^^^^^^^^^^

-  pcntl.async_signals INI directive
-  pcntl_async_signals() function

Patches and Tests
-----------------

The patch is really simple: `PR
1953 <https://github.com/php/php-src/pull/1953>`__

Implementation
--------------

After the project is implemented, this section should contain

#. `c03ccfe78d6b13cab9546efb616a42a8f3e8a4e0 <http://git.php.net/?p=php-src.git;a=commitdiff;h=c03ccfe78d6b13cab9546efb616a42a8f3e8a4e0>`__
#. Documentation:
   http://php.net/manual/en/function.pcntl-async-signals.php

Additional Metadata
-------------------

:Original Authors: Dmitry Stogov, dmitry@zend.com
:Original Status: Accepted
:Slug: async_signals
:Wiki URL: https://wiki.php.net/rfc/async_signals
